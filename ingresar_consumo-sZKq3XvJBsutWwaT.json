{"createdAt":"2025-10-06T05:18:32.200Z","updatedAt":"2025-10-10T04:43:34.000Z","id":"sZKq3XvJBsutWwaT","name":"ingresar_consumo","active":false,"isArchived":false,"nodes":[{"parameters":{"workflowInputs":{"values":[{"name":"mensaje"},{"name":"fecha"},{"name":"instancia"},{"name":"telefono"}]}},"id":"f856a1c8-711c-4bec-a07b-7ea1b88335bb","typeVersion":1.1,"name":"When Executed by Another Workflow","type":"n8n-nodes-base.executeWorkflowTrigger","position":[0,0]},{"parameters":{"promptType":"define","text":"={{ $json.mensaje }}","hasOutputParser":true,"options":{"systemMessage":"=### ðŸŽ¯ FORMATO DE SALIDA\nTransforma {{ $json.mensaje }} al formato: \"Producto\" cantidad, \"Producto\" cantidad\n\n## VALIDACIÃ“N INICIAL\n- Los productos en el mensaje YA vienen marcados entre comillas dobles\n- Si el mensaje NO contiene ningÃºn texto entre comillas, devuÃ©lvelo EXACTAMENTE como llegÃ³ sin realizar ningÃºn cambio\n- Solo procesa mensajes que contengan al menos un producto entre comillas\n\n## EJEMPLOS DE FORMATO (usa los productos del mensaje real, NO estos):\n**Ejemplo de entrada:** 4 \"ProductoA\" y 1 \"ProductoB\"\n**Ejemplo de salida:** \"ProductoA\" 4, \"ProductoB\" 1\n\n**Ejemplo de entrada:** 1 \"Gaseosa 350 ml.\" y 2 \"Chorizos.\"\n**Ejemplo de salida:** \"Gaseosa 350 ml\" 1, \"Chorizos\" 2\n\n## REGLAS ESTRICTAS:\n1. Comillas dobles obligatorias: \"Chorizos\"\n2. Espacio tras comillas: \"Chorizos\" 3\n3. Coma+espacio entre productos: , \"\n4. Sin saltos de lÃ­nea (\\n)\n5. Mantener mayÃºsculas/minÃºsculas exactas de los nombres\n6. **ELIMINAR puntos (.) que estÃ©n ÃšNICAMENTE al FINAL de los nombres de productos**\n7. NO eliminar puntos que estÃ©n en medio del nombre (ejemplo: \"Dr. Pepper\" mantiene el punto)\n\n## FORMATO DE RESPUESTA OBLIGATORIO\n- Tu respuesta DEBE contener ÃšNICAMENTE el mensaje procesado en el formato especificado\n- NO incluyas explicaciones, anÃ¡lisis, ni descripciones\n- SOLO devuelve el resultado final, sin texto adicional\n- Si no hay productos entre comillas, devuelve el mensaje original exactamente como llegÃ³"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[416,0],"id":"45d33c1f-9e3b-4ca4-b555-1070c05f15ae","name":"AI Agent2"},{"parameters":{"modelName":"models/gemini-2.0-flash","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[384,192],"id":"5e99b6ed-b5f0-486e-b456-cb0496792530","name":"Google Gemini Chat Model4","credentials":{"googlePalmApi":{"id":"2llV2c1H3lSUoFpn","name":"milenaGRATIS"}}},{"parameters":{"jsCode":"// Capturamos el texto desde la propiedad correcta\nconst texto = String($input.first().json.output || '').trim();\n\n// Regex para extraer \"producto\" cantidad\nconst regex = /\"([^\"]+)\"\\s+(\\d+(?:\\.\\d+)?)/g;\nconst filas = [];\nlet match;\n\nwhile ((match = regex.exec(texto)) !== null) {\n  filas.push({\n    PRODUCTO: match[1].replace(/_/g, ' '),\n    CANTIDAD: parseFloat(match[2]),\n    FECHA: new Date().toLocaleString('es-CO', { timeZone: 'America/Bogota' })\n  });\n}\n\n// Si no se encontraron productos, devolver el texto original\nif (filas.length === 0) {\n  return [{ mensaje: texto }];\n}\n\nreturn filas;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1200,0],"id":"7a9aef12-872c-4ae3-b26d-ef66976ab25f","name":"Code_ventas1"},{"parameters":{"jsCode":"// Acceder a TODOS los items del nodo de consumos\nlet consumosPersonales = [];\n// Usar $items para obtener todos los items del nodo especÃ­fico\ntry {\n  const todosLosConsumos = $items(\"ingresa_consumos_personales\");\n  if (todosLosConsumos && Array.isArray(todosLosConsumos)) {\n    consumosPersonales = todosLosConsumos.map(item => item.json);\n  }\n} catch (error) {\n  // MÃ©todo fallback si $items no funciona\n  const consumosDirectos = $node[\"ingresa_consumos_personales\"];\n  if (consumosDirectos && consumosDirectos.json) {\n    consumosPersonales = [consumosDirectos.json];\n  }\n}\n\n// Procesar inventario (extraer datos json)\nconst inventarioData = $input.all();\nconst inventarioItems = [];\ninventarioData.forEach(item => {\n  if (item.json && item.json.stock_actual_unidades !== undefined) {\n    inventarioItems.push(item.json);\n  }\n});\n\n// Verificar que tenemos datos vÃ¡lidos - mejorar el manejo de errores\nif (consumosPersonales.length === 0) {\n  // Si no hay consumos, no hacer nada y retornar vacÃ­o (no error)\n  return [];\n}\n\nif (inventarioItems.length === 0) {\n  // Si no hay inventario aÃºn, no hacer nada y retornar vacÃ­o (no error)\n  return [];\n}\n\n// Eliminar duplicados del inventario basÃ¡ndose en producto y row_number\nconst inventarioSinDuplicados = inventarioItems.filter((item, index, self) => \n  index === self.findIndex(i => i.producto === item.producto && i.row_number === item.row_number)\n);\n\n// Crear un mapa de consumos por producto\nconst consumosPorProducto = {};\nconsumosPersonales.forEach(consumo => {\n  const producto = consumo.producto;\n  const cantidad = consumo.cantidad;\n  \n  if (consumosPorProducto[producto]) {\n    consumosPorProducto[producto] += cantidad;\n  } else {\n    consumosPorProducto[producto] = cantidad;\n  }\n});\n\n// Procesar el inventario y descontar los consumos\nconst inventarioActualizado = inventarioSinDuplicados.map(item => {\n  const producto = item.producto;\n  const stockActual = item.stock_actual_unidades;\n  \n  // Verificar si este producto fue consumido\n  if (consumosPorProducto[producto]) {\n    const cantidadConsumida = consumosPorProducto[producto];\n    const nuevoStock = Math.max(0, stockActual - cantidadConsumida);\n    \n    return {\n      ...item,\n      stock_actual_unidades: nuevoStock\n    };\n  }\n  \n  // Si no fue consumido, mantener el stock actual\n  return item;\n});\n\n// Retornar solo el inventario actualizado\nreturn inventarioActualizado;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1776,0],"id":"5fd67017-d8ad-42e6-8968-b25f6cc8f964","name":"Procesar_actualizacion_inventario1"},{"parameters":{"jsCode":"// Obtener los datos de los consumos y el inventario actualizado\nconst consumosData = $items(\"ingresa_consumos_personales\");\nconst inventarioActualizado = $input.all();\n\n// Obtener fecha y hora actual en zona horaria de BogotÃ¡\nconst fechaHora = new Date().toLocaleString('es-CO', {\n  timeZone: 'America/Bogota',\n  day: '2-digit',\n  month: '2-digit', \n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit',\n  second: '2-digit',\n  hour12: true\n});\n\n// Crear mapa del inventario actualizado por producto\nconst stockActualizado = {};\ninventarioActualizado.forEach(item => {\n  if (item.json) {\n    stockActualizado[item.json.producto] = item.json.stock_actual_unidades;\n  }\n});\n\n// Lista de productos que NO deben mostrar nuevoStock\nconst productosSinNuevoStock = [\"Arepa con queso\", \"Arepa BURGUER\", \"Chorizos\"];\n\n// Generar lÃ­neas de confirmaciÃ³n para cada consumo\nconst lineasConfirmacion = consumosData.map(consumo => {\n  const producto = consumo.json.producto;\n  const cantidad = consumo.json.cantidad;\n  const nuevoStock = stockActualizado[producto] || 'N/A';\n  \n  if (productosSinNuevoStock.includes(producto)) {\n    return `${cantidad} ${producto}`;\n  } else {\n    return `${cantidad} ${producto} / nuevoStock : ${nuevoStock}`;\n  }\n});\n\n// Construir el mensaje completo\nconst mensaje = [\n  \"âœ… Registro de consumo personal\",\n  fechaHora,\n  \"\",  // LÃ­nea vacÃ­a para agregar espacio\n  ...lineasConfirmacion\n].join('\\n');\n\n// Retornar el mensaje\nreturn [{ \n  mensaje: mensaje,\n  timestamp: fechaHora,\n  consumosRegistrados: lineasConfirmacion.length\n}];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2192,0],"id":"8cb5543a-9eb2-4dae-88ec-9e141b4d0d4b","name":"Code6"},{"parameters":{"assignments":{"assignments":[{"id":"a3ccdf74-ab37-47af-aab9-b14e38808cd7","name":"mensaje","value":"={{ $json.mensaje }}","type":"string"},{"id":"6011c99a-1022-4fad-b11c-540794666bfc","name":"fecha","value":"={{ $json.fecha }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[224,0],"id":"7cd42ba3-5673-47bf-be08-af8dda2153d9","name":"Edit Fields"},{"parameters":{"assignments":{"assignments":[{"id":"19979410-c550-49a0-b457-6fd77e30b791","name":"mensaje","value":"={{ $json.mensaje }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[2416,0],"id":"20dec4b1-b71a-4205-8363-4b8d15874ddd","name":"Edit Fields1"},{"parameters":{"resource":"messages-api","instanceName":"={{ $('When Executed by Another Workflow').first().json.instancia }}","remoteJid":"={{ $('When Executed by Another Workflow').first().json.telefono }}","messageText":"={{ $json.mensaje }}","options_message":{}},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[2656,0],"id":"45e41d75-232a-4202-a6e9-dc3a5edda8ea","name":"Enviar texto","credentials":{"evolutionApi":{"id":"KDzQAvjURY1uhhvT","name":"Evolution account"}}},{"parameters":{"operation":"select","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"cache_inventario","mode":"list","cachedResultName":"cache_inventario"},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1600,144],"id":"7e098fc7-b8a6-4f63-b658-d1d941e5dbed","name":"obtener_inventario1","executeOnce":true,"credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"consumos_personales","mode":"list","cachedResultName":"consumos_personales"},"columns":{"mappingMode":"defineBelow","value":{"cantidad":"={{ $json.CANTIDAD }}","producto":"={{ $json.PRODUCTO }}","precio":0,"fecha":"={{ $('Edit Fields').item.json.fecha }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"number","canBeUsedToMatch":true,"removed":true},{"id":"cantidad","displayName":"cantidad","required":true,"defaultMatch":false,"display":true,"type":"number","canBeUsedToMatch":true},{"id":"producto","displayName":"producto","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"fecha","displayName":"fecha","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":true,"removed":false},{"id":"precio","displayName":"precio","required":true,"defaultMatch":false,"display":true,"type":"number","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1424,0],"id":"b98e0ce7-4844-4783-b2ce-f5ce09592197","name":"ingresa_consumos_personales","credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"operation":"update","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"cache_inventario","mode":"list","cachedResultName":"cache_inventario"},"columns":{"mappingMode":"defineBelow","value":{"stock_actual_unidades":"={{ $json.stock_actual_unidades }}","producto":"={{ $json.producto }}","updated_at":"2025-10-06T20:22:17"},"matchingColumns":["producto"],"schema":[{"id":"producto","displayName":"producto","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"unidad_medida","displayName":"unidad_medida","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"factor_unidades","displayName":"factor_unidades","required":false,"defaultMatch":false,"display":true,"type":"number","canBeUsedToMatch":true,"removed":true},{"id":"stock_actual_unidades","displayName":"stock_actual_unidades","required":false,"defaultMatch":false,"display":true,"type":"number","canBeUsedToMatch":true,"removed":false},{"id":"precio_ultima_compra","displayName":"precio_ultima_compra","required":false,"defaultMatch":false,"display":true,"type":"number","canBeUsedToMatch":true,"removed":true},{"id":"fecha_ultima_compra","displayName":"fecha_ultima_compra","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"updated_at","displayName":"updated_at","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":true,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[2000,0],"id":"ec61bdeb-d85d-4f49-97ab-c4b291dc4e36","name":"Update rows in a table","credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"c8549a9e-b1a8-451b-839f-2db694d5f9bc","leftValue":"={{ $json.output }}","rightValue":"\"","operator":{"type":"string","operation":"contains"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[768,0],"id":"4e368df6-aad1-48b2-8f24-78097bd1295f","name":"If"},{"parameters":{"resource":"messages-api","instanceName":"={{ $('When Executed by Another Workflow').item.json.instancia }}","remoteJid":"={{ $('When Executed by Another Workflow').item.json.telefono }}","messageText":"=No se encontro un producto valido en este mensaje \"{{ $json.output }}\"","options_message":{}},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[1024,176],"id":"e02b5733-5198-4bd0-af01-f079319bc48b","name":"Enviar texto1","credentials":{"evolutionApi":{"id":"KDzQAvjURY1uhhvT","name":"Evolution account"}}}],"connections":{"When Executed by Another Workflow":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"AI Agent2":{"main":[[{"node":"If","type":"main","index":0}]]},"Google Gemini Chat Model4":{"ai_languageModel":[[{"node":"AI Agent2","type":"ai_languageModel","index":0}]]},"Code_ventas1":{"main":[[{"node":"ingresa_consumos_personales","type":"main","index":0}]]},"Procesar_actualizacion_inventario1":{"main":[[{"node":"Update rows in a table","type":"main","index":0}]]},"Code6":{"main":[[{"node":"Edit Fields1","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"AI Agent2","type":"main","index":0}]]},"obtener_inventario1":{"main":[[{"node":"Procesar_actualizacion_inventario1","type":"main","index":0}]]},"ingresa_consumos_personales":{"main":[[{"node":"Procesar_actualizacion_inventario1","type":"main","index":0},{"node":"obtener_inventario1","type":"main","index":0}]]},"Update rows in a table":{"main":[[{"node":"Code6","type":"main","index":0}]]},"Edit Fields1":{"main":[[{"node":"Enviar texto","type":"main","index":0}]]},"If":{"main":[[{"node":"Code_ventas1","type":"main","index":0}],[{"node":"Enviar texto1","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","timezone":"America/Bogota","callerPolicy":"workflowsFromSameOwner","executionTimeout":15,"availableInMCP":false,"errorWorkflow":"6372jK3MqgOJM8iD"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"When Executed by Another Workflow":[{"json":{"mensaje":"me tome 1 manzana","fecha":"09/10/2025","instancia":"pepe cadena","telefono":"573103015865@s.whatsapp.net"}}],"AI Agent2":[{"json":{"output":"me tome 1 manzana n"}}]},"versionId":"7cb5db82-4691-45d1-b906-fb121226e1d9","triggerCount":0,"shared":[{"createdAt":"2025-10-06T05:18:32.205Z","updatedAt":"2025-10-06T05:18:32.205Z","role":"workflow:owner","workflowId":"sZKq3XvJBsutWwaT","projectId":"5qz94e5MiZbyOPrk"}],"tags":[]}