{"createdAt":"2025-10-06T05:11:25.657Z","updatedAt":"2025-10-08T03:28:29.000Z","id":"nXXVsGr895OEIu0Q","name":"Gerson_VENTAS","active":true,"isArchived":false,"nodes":[{"parameters":{"resource":"audio","modelId":{"__rl":true,"value":"models/gemini-2.0-flash","mode":"list","cachedResultName":"models/gemini-2.0-flash"},"inputType":"binary","simplify":false,"options":{}},"type":"@n8n/n8n-nodes-langchain.googleGemini","typeVersion":1,"position":[-6816,608],"id":"11a270ca-5c27-4496-9150-26dad1bae86b","name":"Transcribe a recording1","credentials":{"googlePalmApi":{"id":"2llV2c1H3lSUoFpn","name":"milenaGRATIS"}}},{"parameters":{"jsCode":"// Obtener el texto desde la ruta indicada\nlet texto = $json.candidates?.[0]?.content?.parts?.[0]?.text || \"\";\n\n// Diccionario básico de números en palabras a números\nconst numeros = {\n  \"cero\": \"0\",\n  \"uno\": \"1\", \"una\": \"1\", \"un\": \"1\",\n  \"dos\": \"2\",\n  \"tres\": \"3\",\n  \"cuatro\": \"4\",\n  \"cinco\": \"5\",\n  \"seis\": \"6\",\n  \"siete\": \"7\",\n  \"ocho\": \"8\",\n  \"nueve\": \"9\",\n  \"diez\": \"10\",\n  \"once\": \"11\",\n  \"doce\": \"12\",\n  \"trece\": \"13\",\n  \"catorce\": \"14\",\n  \"quince\": \"15\",\n  \"dieciséis\": \"16\", \"dieciseis\": \"16\",\n  \"diecisiete\": \"17\",\n  \"dieciocho\": \"18\",\n  \"diecinueve\": \"19\",\n  \"veinte\": \"20\",\n  \"veintiuno\": \"21\", \"veintiuna\": \"21\",\n  \"veintidós\": \"22\", \"veintidos\": \"22\",\n  \"veintitrés\": \"23\", \"veintitres\": \"23\",\n  \"veinticuatro\": \"24\",\n  \"veinticinco\": \"25\",\n  \"veintiséis\": \"26\", \"veintiseis\": \"26\",\n  \"veintisiete\": \"27\",\n  \"veintiocho\": \"28\",\n  \"veintinueve\": \"29\",\n  \"treinta\": \"30\",\n  \"cuarenta\": \"40\",\n  \"cincuenta\": \"50\",\n  \"sesenta\": \"60\",\n  \"setenta\": \"70\",\n  \"ochenta\": \"80\",\n  \"noventa\": \"90\",\n  \"cien\": \"100\",\n  \"ciento\": \"100\",\n  \"mil\": \"1000\",\n  \"punto\": \".\"\n};\n\n// Convertir solo las palabras que están en el diccionario\nlet resultado = texto;\n\n// Reemplazar cada palabra del diccionario con su número correspondiente\nfor (let palabra in numeros) {\n  let regex = new RegExp('\\\\b' + palabra + '\\\\b', 'gi');\n  resultado = resultado.replace(regex, numeros[palabra]);\n}\n\nreturn { texto_convertido: resultado };"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-6608,608],"id":"99dab97d-4567-4f4c-8efe-483863402f07","name":"Code5"},{"parameters":{"assignments":{"assignments":[{"id":"b65575a3-b476-4c0f-8ce4-a7f93531b7f0","name":"final_message","value":"={{ $json.texto_convertido }}","type":"string"},{"id":"bf8845d4-5e4e-4596-b9d9-ec7940739e0c","name":"sessionid","value":"={{ $('Webhook').item.json.body.data.key.remoteJid }}","type":"string"},{"id":"d1aea00f-74e0-4acd-bf3d-5984b8eade6c","name":"datetime","value":"={{ new Date($now).toLocaleDateString('es-CO', { timeZone: 'America/Bogota', day: '2-digit', month: '2-digit', year: 'numeric' }) }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-6368,608],"id":"bc1d61f5-e73b-439e-a265-e2e2d3f5a54a","name":"Final_message_audio"},{"parameters":{"assignments":{"assignments":[{"id":"aa4f659e-93fd-458f-8cb0-d6b2bd655160","name":"sessionid","value":"={{ $('Switch2').first().json.sessionid }}","type":"string"},{"id":"b355a1d1-f888-4ce4-b12b-03a9644fb07e","name":"estado","value":"={\n  \"mensaje_original\": \"{{ $json.texto_convertido }}\",\n  \"requiere_confirmacion\": false,\n  \"items\": []\n}\n","type":"object"},{"id":"1e088d66-819f-4e4d-ad34-9ca8e437290d","name":"texto_convertido","value":"={{ $json.texto_convertido }}","type":"string"},{"id":"24d4ebcf-1ef4-4bc1-abe8-04419ac1cf23","name":"datetime","value":"={{ new Date($now).toLocaleDateString('es-CO', { timeZone: 'America/Bogota', day: '2-digit', month: '2-digit', year: 'numeric' }) }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-6192,816],"id":"3024f129-59b7-4c9c-98bc-a21ece2154f6","name":"FInal_message_text"},{"parameters":{"jsCode":"// Obtener el texto desde la ruta indicada\nlet texto = $input.first().json.estado.mensaje_original || \"\";\n\n// Diccionario básico de números en palabras a números\nconst numeros = {\n  \"cero\": \"0\",\n  \"uno\": \"1\", \"una\": \"1\", \"un\": \"1\",\n  \"dos\": \"2\",\n  \"tres\": \"3\",\n  \"cuatro\": \"4\",\n  \"cinco\": \"5\",\n  \"seis\": \"6\",\n  \"siete\": \"7\",\n  \"ocho\": \"8\",\n  \"nueve\": \"9\",\n  \"diez\": \"10\",\n  \"once\": \"11\",\n  \"doce\": \"12\",\n  \"trece\": \"13\",\n  \"catorce\": \"14\",\n  \"quince\": \"15\",\n  \"dieciséis\": \"16\", \"dieciseis\": \"16\",\n  \"diecisiete\": \"17\",\n  \"dieciocho\": \"18\",\n  \"diecinueve\": \"19\",\n  \"veinte\": \"20\",\n  \"veintiuno\": \"21\", \"veintiuna\": \"21\",\n  \"veintidós\": \"22\", \"veintidos\": \"22\",\n  \"veintitrés\": \"23\", \"veintitres\": \"23\",\n  \"veinticuatro\": \"24\",\n  \"veinticinco\": \"25\",\n  \"veintiséis\": \"26\", \"veintiseis\": \"26\",\n  \"veintisiete\": \"27\",\n  \"veintiocho\": \"28\",\n  \"veintinueve\": \"29\",\n  \"treinta\": \"30\",\n  \"cuarenta\": \"40\",\n  \"cincuenta\": \"50\",\n  \"sesenta\": \"60\",\n  \"setenta\": \"70\",\n  \"ochenta\": \"80\",\n  \"noventa\": \"90\",\n\n};\n\n// Función para convertir palabras a números o símbolos\nfunction palabraANumero(palabra) {\n  palabra = palabra.toLowerCase().trim();\n  \n  // Conversión de \"punto\" a \".\"\n  if (palabra === \"punto\") {\n    return \".\";\n  }\n  \n  if (numeros.hasOwnProperty(palabra)) {\n    return numeros[palabra];\n  }\n  \n  // Manejo de combinaciones como \"treinta y cinco\"\n  if (palabra.includes(\" y \")) {\n    let partes = palabra.split(\" y \").map(p => p.trim());\n    if (numeros[partes[0]] && numeros[partes[1]]) {\n      return (parseInt(numeros[partes[0]]) + parseInt(numeros[partes[1]])).toString();\n    }\n  }\n  \n  return palabra; // si no se reconoce, se deja igual\n}\n\n// Procesar el texto palabra por palabra\nlet palabras = texto.split(/(\\s+)/); // Mantiene los espacios\nlet resultado = palabras.map(palabra => {\n  // Solo procesar si no es un espacio y contiene letras\n  if (palabra.trim() && /[a-záéíóúñ]/i.test(palabra)) {\n    return palabraANumero(palabra);\n  }\n  return palabra;\n}).join('');\n\nreturn { texto_convertido: resultado };"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-6384,816],"id":"69c60fb0-8c53-46c8-abdc-dac10657ec6d","name":"Code8"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"cccb067b-4dd7-4efc-8b4f-70a2e8f0fcc3","leftValue":"={{ $('Webhook').item.json.body.data.messageType }}","rightValue":"audioMessage","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"audio"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $('Webhook').item.json.body.data.messageType }}","rightValue":"=conversation","operator":{"type":"string","operation":"equals"},"id":"1066c446-0129-4619-8eff-ec1b00093dda"}],"combinator":"and"},"renameOutput":true,"outputKey":"texto"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[-6592,800],"id":"a432907f-3530-440c-9d31-636406a2472f","name":"Switch2"},{"parameters":{"resource":"chat-api","operation":"get-media-base64","instanceName":"={{ $('Webhook').item.json.body.instance }}","messageId":"={{ $('Webhook').item.json.body.data.key.id }}"},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[-7216,608],"id":"fbc15e56-dca7-421f-b14e-ac174aaba17d","name":"Obter m dia em base64","credentials":{"evolutionApi":{"id":"KDzQAvjURY1uhhvT","name":"Evolution account"}}},{"parameters":{"operation":"toBinary","sourceProperty":"data.base64","options":{"fileName":"audio.mp3"}},"type":"n8n-nodes-base.convertToFile","typeVersion":1.1,"position":[-7040,608],"id":"6fcdfcb2-49ef-4f9d-aa62-fdda302681c5","name":"Convert to File1"},{"parameters":{"modelName":"models/gemini-2.0-flash","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[-1264,736],"id":"856ee760-80c9-4122-a2ce-1416c6e8862f","name":"Google Gemini Chat Model1","credentials":{"googlePalmApi":{"id":"2llV2c1H3lSUoFpn","name":"milenaGRATIS"}}},{"parameters":{"workflowId":{"__rl":true,"value":"Ejg0iou6XLtlYPmi","mode":"list","cachedResultUrl":"/workflow/Ejg0iou6XLtlYPmi","cachedResultName":"obtener_inventario"},"workflowInputs":{"mappingMode":"defineBelow","value":{"mensaje":"={{ $json.final_message }}","telefono":"={{ $json.sessionid }}","fecha":"={{ $json.datetime }}","instancia":"={{ $('Webhook').first().json.body.instance }}"},"matchingColumns":[],"schema":[{"id":"mensaje","displayName":"mensaje","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"telefono","displayName":"telefono","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"fecha","displayName":"fecha","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"instancia","displayName":"instancia","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"}],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[-4096,576],"id":"e4e54fbd-842c-42cb-afbe-4b04bc6907b7","name":"Execute Workflow1"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"b8711675-481a-47a5-b7fc-7fb78291914c","leftValue":"={{ $json.final_message }}","rightValue":"=inventario","operator":{"type":"string","operation":"equals"}}],"combinator":"and"},"looseTypeValidation":true,"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-4240,768],"id":"224adfbd-dd1f-46ba-9098-30d588abd07a","name":"IF1"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.output }}","rightValue":"venta","operator":{"type":"string","operation":"contains"},"id":"4073be86-ac3d-4341-82e7-b7088b96fa02"}],"combinator":"and"},"renameOutput":true,"outputKey":"venta"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"b6189def-f795-4403-8763-be0074e7c569","leftValue":"={{ $json.output }}","rightValue":"actualizarPrecio","operator":{"type":"string","operation":"contains"}}],"combinator":"and"},"renameOutput":true,"outputKey":"Actualizar precios"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"6643239a-a644-411c-8d18-62571cd67c50","leftValue":"={{ $json.output }}","rightValue":"Registrar consumo","operator":{"type":"string","operation":"contains"}}],"combinator":"and"},"renameOutput":true,"outputKey":"consumoPersonal"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"eab13bf9-e889-461d-903e-897b9dad78d9","leftValue":"={{ $json.output }}","rightValue":"=informeVentas","operator":{"type":"string","operation":"contains"}}],"combinator":"and"},"renameOutput":true,"outputKey":"informeVentas"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"f6d4b305-0c05-464e-8bdf-f29027df2858","leftValue":"={{ $json.output }}","rightValue":"ingresarProductosAbodega","operator":{"type":"string","operation":"contains"}}],"combinator":"and"},"renameOutput":true,"outputKey":"ingresoProductos Inventario"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"bd7c9184-c623-444b-b561-fdfc2a53fcf6","leftValue":"={{ $json.output }}","rightValue":"envio_link","operator":{"type":"string","operation":"contains"}}],"combinator":"and"},"renameOutput":true,"outputKey":"crear producto"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[-864,416],"id":"9302cfe4-e91f-42c1-b9ce-3b43229b2ffb","name":"Switch"},{"parameters":{"workflowId":{"__rl":true,"value":"3wlUF6WHBhmhYuJU","mode":"list","cachedResultUrl":"/workflow/3wlUF6WHBhmhYuJU","cachedResultName":"Registra_ventas"},"workflowInputs":{"mappingMode":"defineBelow","value":{"mensaje":"={{ $('mensajeListo').item.json.texto_para_administrador }}","numero_telefono":"={{ $('¿Es respuesta a sugerencia?').first().json.sessionid }}","instancia":"={{ $('Webhook').first().json.body.instance }}","date_time":"={{ $('¿Es respuesta a sugerencia?').first().json.datetime }}"},"matchingColumns":[],"schema":[{"id":"mensaje","displayName":"mensaje","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"numero_telefono","displayName":"numero_telefono","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"date_time","displayName":"date_time","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"instancia","displayName":"instancia","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"}],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[-240,-32],"id":"cc9b10a8-5431-4234-886f-13bfa2b34473","name":"registroVentas"},{"parameters":{"workflowId":{"__rl":true,"value":"sZKq3XvJBsutWwaT","mode":"list","cachedResultUrl":"/workflow/sZKq3XvJBsutWwaT","cachedResultName":"ingresar_consumo"},"workflowInputs":{"mappingMode":"defineBelow","value":{"mensaje":"={{ $('mensajeListo').item.json.texto_para_administrador }}","fecha":"={{ $('¿Es respuesta a sugerencia?').first().json.datetime }}","telefono":"={{ $('¿Es respuesta a sugerencia?').first().json.sessionid }}","instancia":"={{ $('Webhook').first().json.body.instance }}"},"matchingColumns":[],"schema":[{"id":"mensaje","displayName":"mensaje","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"fecha","displayName":"fecha","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"instancia","displayName":"instancia","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"telefono","displayName":"telefono","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"}],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[-240,320],"id":"a40bab9b-a51f-4a6d-8eb7-5cdaeb342cde","name":"consumoPersonal"},{"parameters":{"workflowId":{"__rl":true,"value":"UlHIKLXfyQkFcjCP","mode":"list","cachedResultUrl":"/workflow/UlHIKLXfyQkFcjCP","cachedResultName":"informe_ventas"},"workflowInputs":{"mappingMode":"defineBelow","value":{"mensaje":"={{ $('mensajeListo').item.json.texto_para_administrador }}","wa_id":"={{ $('¿Es respuesta a sugerencia?').first().json.sessionid }}","fecha":"={{ $('¿Es respuesta a sugerencia?').first().json.datetime }}","instancia":"={{ $('Webhook').first().json.body.instance }}"},"matchingColumns":[],"schema":[{"id":"mensaje","displayName":"mensaje","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"wa_id","displayName":"wa_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"instancia","displayName":"instancia","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"fecha","displayName":"fecha","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"}],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[-480,976],"id":"e45784e6-4102-42d7-af5d-39b3620c86d8","name":"informeVentas"},{"parameters":{"workflowId":{"__rl":true,"value":"Wg6zh3EFPjY6VqYI","mode":"list","cachedResultUrl":"/workflow/Wg6zh3EFPjY6VqYI","cachedResultName":"ingresan Productos A Inventario"},"workflowInputs":{"mappingMode":"defineBelow","value":{"mensaje":"={{ $('mensajeListo').item.json.texto_para_administrador }}","wa_id":"={{ $('¿Es respuesta a sugerencia?').first().json.sessionid }}","fecha":"={{ $('¿Es respuesta a sugerencia?').first().json.datetime }}","instancia":"={{ $('Webhook').first().json.body.instance }}"},"matchingColumns":[],"schema":[{"id":"mensaje","displayName":"mensaje","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"wa_id","displayName":"wa_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"instancia","displayName":"instancia","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"fecha","displayName":"fecha","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"}],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[-256,528],"id":"5ec67cf0-b5e6-41e6-b5dc-066923c340c9","name":"ingresarProductoInventario"},{"parameters":{"promptType":"define","text":"={{ $json.texto_para_administrador }}","hasOutputParser":true,"options":{"systemMessage":"=# SISTEMA DE DETECCIÓN DE INTENCIONES - AGENTE IA\n\nEres un agente especializado en identificar la intención del usuario y devolver el output correspondiente. Analiza cada mensaje y determina qué acción tomar. \n\n## 🚨 REGLA FUNDAMENTAL - OBLIGATORIA:\n\n**CUANDO DEVUELVAS EL OUTPUT:**\n- ❌ NO agregues saludos, comentarios, explicaciones ni texto adicional\n- ❌ NO modifiques, reformules o interpretes la respuesta\n- ❌ NO añadas tu propio estilo de escritura\n- ❌ NO incluyas frases como \"Aquí tienes...\", \"El resultado es...\", etc.\n\n\n---\n\n## 🛒 DETECCIÓN DE VENTAS - PRIORIDAD MÁXIMA\n\n### 💡 EJEMPLOS DE VENTAS:\n\n- \"2 Agua 600ml sin gas y 1 Gaseosas MEGA 2.5\"\n- \"1 Gaseosas 350ml\"\n- \"2 Gaseosas 250ml\" \n- \"50 Arepas de QUESO\"\n\n### 🎯 ACCIÓN:\n**Devuelve output:** `venta`\n\n---\n\n## 💰 ACTUALIZAR PRECIO DE PRODUCTOS\n\n### 📝 PALABRAS CLAVE:\n- **quedo a/quedó a**\n- **quedo/quedó**\n- **actualizar precio**\n- **cambiar el precio**\n- **modificar precio**\n- **nuevo precio**\n- **precio ahora es**\n- **ahora cuesta**\n- **ahora vale**\n\n### 💡 EJEMPLOS:\n- \"la 350 quedó a 3000\"\n- \"la cerveza ahora cuesta $5000\"\n- \"cambia el precio del combo a $8000\"\n- \"actualiza la gaseosa a $3500\"\n- \"el tinto ahora está a $1000\"\n\n### 🎯 ACCIÓN:\n**Devuelve output:** `actualizarPrecio`\n\n---\n\n## 🍽️ CONSUMO DE PRODUCTOS POR PARTE DEL DUEÑO\n\n### 📝 PALABRAS CLAVE:\n- **me tomé/me tome**\n- **me comí/me comi**\n- **consumí/consumi**\n\n### 💡 EJEMPLOS:\n- \"me tomé 1 Gaseosas 350ml\"\n- \"me tomé 2 Gaseosas 250ml\"\n- \"me comí 1 chorizo\"\n- \"me comi una arepa\"\n- \"me comí 2 combos\"\n\n### 🎯 ACCIÓN:\n**Devuelve output:** `Registrar consumo`\n\n---\n\n📊 INFORMES DE VENTAS\n📝 PALABRAS CLAVE:\n\nventa/ventas\ninforme/informes\nreporte de ventas\nventas de hoy/ayer/antier\nventas de esta semana/mes\ncuánto vendimos\ntotal de ventas\n\n🎯 ACCIÓN:\nDevuelve output: informeVentas\n\n---\n\n## 📦 INGRESO DE PRODUCTOS AL INVENTARIO\n\n### 📝 PALABRAS CLAVE:\n-ingresaron\n-llegaron\n-entraron\n-cajas\n-pacas\n-bolsas\n- **cajas de/pacas de**\n- **unidades**\n- **entraron/ingresaron**\n- **llegó mercancía**\n- **recibí/recibimos**\n- **compré/compramos**\n- **me trajeron**\n\n### 💡 EJEMPLOS:\n- \"entraron 5 cajas de Gaseosa 250ml\"\n- \"llegaron 3 pacas de Gaseosas MEGA 2.5\"\n- \"recibí 10 unidades de...\"\n\n### 🎯 ACCIÓN:\n**Devuelve output:** `ingresarProductosAbodega`\n\n---\n\n## 🆕 CREAR NUEVOS PRODUCTOS\n\n### 📝 PALABRAS CLAVE:\n- **crear/creando**\n- **nuevo/nueva/nuevos**\n- **agregar producto**\n- **registrar producto**\n- **añadir al inventario**\n\n### 💡 EJEMPLOS:\n- \"crear nuevo producto\"\n- \"necesito agregar un producto\"\n- \"registrar nueva cerveza\"\n\n### 🎯 ACCIÓN:\n**Devuelve output:** `envio_link` \n\n---\n\n## ⚠️ REGLAS IMPORTANTES:\n\n1. **PRIORIDAD:** Las ventas tienen máxima prioridad\n2. **TOLERANCIA:** Ignora mayúsculas, minúsculas y errores ortográficos\n3. **FLEXIBILIDAD:** No importan palabras adicionales en el mensaje\n4. **DECISIÓN RÁPIDA:** Una sola coincidencia = llamar herramienta\n5. **MENSAJE COMPLETO:** Siempre pasa el mensaje original completo a la herramienta\n6. **RESPUESTA ÚNICA:** Para TODAS las herramientas: devuelve ÚNICAMENTE ok\n\n## 🚨 RECORDATORIOS CRÍTICOS:\n\n### OBLIGATORIO AL USAR HERRAMIENTAS:\n\n- ❌ **NO INTERPRETES** la respuesta de la herramienta\n- ❌ **NO REFORMULES** el mensaje\n- ❌ **NO AGREGUES** tu propio texto\n- ❌ **NO USES** frases como \"Aquí está...\", \"El resultado es...\", etc.\n\n"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[-1216,496],"id":"817d58d0-2a4c-43fa-9424-01da289db318","name":"Administrador1"},{"parameters":{"workflowId":{"__rl":true,"value":"8oU6HQJ27cFnKBQV","mode":"list","cachedResultUrl":"/workflow/8oU6HQJ27cFnKBQV","cachedResultName":"envio_link_nuevoProducto"},"workflowInputs":{"mappingMode":"defineBelow","value":{"mensaje":"={{ $('mensajeListo').item.json.texto_para_administrador }}","instancia":"={{ $('Webhook').first().json.body.instance }}","telefono":"={{ $('¿Es respuesta a sugerencia?').first().json.sessionid }}","fecha":"={{ $('¿Es respuesta a sugerencia?').first().json.datetime }}"},"matchingColumns":[],"schema":[{"id":"mensaje","displayName":"mensaje","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"instancia","displayName":"instancia","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"telefono","displayName":"telefono","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"fecha","displayName":"fecha","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"}],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[-240,752],"id":"22503bff-edb2-46c4-a023-d34aba9ef054","name":"crearProducto"},{"parameters":{"jsCode":"// Entrada esperada: puede venir como string o como array\n// Ejemplo 1: \"qrpa\"\n// Ejemplo 2: [\"qrpa\", \"arepa\"]\n\nlet entrada = $json.productos_detectados || $json.final_message || \"\";\n\n// Si es string, lo convertimos en array de una sola palabra\nif (typeof entrada === \"string\") {\n  entrada = [entrada.trim()];\n}\n\n// Si no es array, lo forzamos a array\nif (!Array.isArray(entrada)) {\n  entrada = [String(entrada)];\n}\n\n// Normalizamos: quitamos vacíos\nentrada = entrada.filter(p => p && p.trim() !== \"\");\n\n// Ahora devolvemos un array de objetos, uno por producto\nreturn entrada.map(p => ({\n  json: { producto_detectado: p }\n}));"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-3376,656],"id":"62f05eb8-8c38-4255-8c85-387267d0557d","name":"producto_detectado"},{"parameters":{},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[-2688,784],"id":"18d15189-982d-42b8-90f5-5c09ba6ccbfd","name":"Merge"},{"parameters":{"jsCode":"function normalizar(s) {\n  if (s === undefined || s === null) return \"\";\n  return String(s)\n    .trim()\n    .toLowerCase()\n    .normalize(\"NFD\")\n    .replace(/[\\u0300-\\u036f]/g, \"\")\n    .replace(/\\s+/g, \" \");\n}\n\nfunction levenshtein(a, b) {\n  const m = a.length, n = b.length;\n  if (m === 0) return n;\n  if (n === 0) return m;\n  const dp = Array.from({ length: m + 1 }, () => new Array(n + 1).fill(0));\n  for (let i = 0; i <= m; i++) dp[i][0] = i;\n  for (let j = 0; j <= n; j++) dp[0][j] = j;\n  for (let i = 1; i <= m; i++) {\n    for (let j = 1; j <= n; j++) {\n      const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n      dp[i][j] = Math.min(\n        dp[i - 1][j] + 1,\n        dp[i][j - 1] + 1,\n        dp[i - 1][j - 1] + cost\n      );\n    }\n  }\n  return dp[m][n];\n}\n\nfunction similitud(a, b) {\n  if (!a && !b) return 1;\n  if (!a || !b) return 0;\n  const dist = levenshtein(a, b);\n  return 1 - dist / Math.max(a.length, b.length);\n}\n\nfunction extraerMarcados(texto) {\n  if (!texto) return [];\n  const matches = String(texto).match(/\"([^\"]+)\"/g);\n  if (!matches) return [];\n  return matches.map(m => m.replace(/\"/g, \"\"));\n}\n\nconst UMBRAL_ACEPTAR = 0.80;\nconst UMBRAL_SUGERIR = 0.60;\n\nconst itemProducto = $input.first();\nconst mensajeOriginal = itemProducto.json.producto_detectado || \"\";\nconst apodos = $input.all().filter(item => item.json.APODO !== undefined);\nconst detectados = extraerMarcados(mensajeOriginal);\n\nif (detectados.length === 0) {\n  return [{\n    json: {\n      mensaje_original: mensajeOriginal,\n      estado: {\n        requiere_confirmacion: false,\n        mensaje_procesado: mensajeOriginal,\n        productos_resueltos: [],\n        reemplazos_realizados: [],\n        sugerencias: [],\n        productos_no_encontrados: []\n      },\n      mensaje_final: mensajeOriginal,\n      sin_productos: true\n    }\n  }];\n}\n\nlet mensajeProcesado = mensajeOriginal;\nlet todosLosReemplazos = [];\nlet productosNoEncontrados = [];\nlet sugerenciasAcumuladas = [];\nlet productosResueltos = []; // NUEVO: Lista de productos ya resueltos\n\n// 🔥 PROCESAR CADA PRODUCTO DETECTADO\nfor (const detectado of detectados) {\n  const entrada = normalizar(detectado);\n\n  if (!entrada) continue;\n\n  // 1) Coincidencia exacta\n  let exacto = apodos.find(f => normalizar(f.json.APODO) === entrada);\n  if (exacto) {\n    const regex = new RegExp(`\"${detectado}\"`, 'g');\n    mensajeProcesado = mensajeProcesado.replace(regex, exacto.json.PRODUCTO);\n    todosLosReemplazos.push({\n      original: detectado,\n      reemplazado: exacto.json.PRODUCTO,\n      tipo: \"exacto\"\n    });\n    \n    // NUEVO: Extraer la parte resuelta del mensaje\n    const parteResuelta = mensajeOriginal.match(new RegExp(`\\\\d+\\\\s+\"${detectado}\"`, 'g'));\n    if (parteResuelta) {\n      const cantidadYProducto = parteResuelta[0].replace(`\"${detectado}\"`, exacto.json.PRODUCTO);\n      productosResueltos.push(cantidadYProducto);\n    }\n    \n    continue;\n  }\n\n  // 2) Calcular similitud\n  let comparaciones = [];\n  for (const fila of apodos) {\n    const apodo = normalizar(fila.json.APODO);\n    const score = similitud(entrada, apodo);\n    comparaciones.push({\n      producto: fila.json.PRODUCTO,\n      apodo,\n      score\n    });\n  }\n\n  comparaciones.sort((a, b) => b.score - a.score);\n  const top3 = comparaciones.slice(0, 3);\n\n  // 3) Decisión por producto\n  if (top3[0] && top3[0].score >= UMBRAL_ACEPTAR) {\n    const regex = new RegExp(`\"${detectado}\"`, 'g');\n    mensajeProcesado = mensajeProcesado.replace(regex, top3[0].producto);\n    todosLosReemplazos.push({\n      original: detectado,\n      reemplazado: top3[0].producto,\n      tipo: \"similitud_alta\",\n      confianza: top3[0].score\n    });\n    \n    // NUEVO: Extraer la parte resuelta del mensaje\n    const parteResuelta = mensajeOriginal.match(new RegExp(`\\\\d+\\\\s+\"${detectado}\"`, 'g'));\n    if (parteResuelta) {\n      const cantidadYProducto = parteResuelta[0].replace(`\"${detectado}\"`, top3[0].producto);\n      productosResueltos.push(cantidadYProducto);\n    }\n    \n  } else if (top3[0] && top3[0].score >= UMBRAL_SUGERIR) {\n    const productosUnicos = [];\n    const productosVistos = new Set();\n    \n    for (const comparacion of top3) {\n      if (!productosVistos.has(comparacion.producto)) {\n        productosVistos.add(comparacion.producto);\n        productosUnicos.push(comparacion);\n      }\n    }\n    \n    sugerenciasAcumuladas.push({\n      apodo_usado: detectado,\n      opciones: productosUnicos.map((r, i) => ({\n        opcion: i + 1,\n        producto: r.producto,\n        apodo: r.apodo,\n        confianza: Number(r.score.toFixed(3))\n      }))\n    });\n  } else {\n    productosNoEncontrados.push(detectado);\n  }\n}\n\n// 🎯 DECIDIR QUE RESPUESTA DAR\n\n// 1) Si hay productos no encontrados\nif (productosNoEncontrados.length > 0) {\n  const listaNoEncontrados = productosNoEncontrados.map(p => `\"${p}\"`).join(\", \");\n  return [{\n    json: {\n      mensaje_original: mensajeOriginal,\n      estado: {\n        requiere_confirmacion: false,\n        mensaje_procesado: mensajeOriginal,\n        productos_resueltos: productosResueltos,\n        reemplazos_realizados: todosLosReemplazos,\n        sugerencias: [],\n        productos_no_encontrados: productosNoEncontrados\n      },\n      mensaje_final: `❌ No encontré ${listaNoEncontrados} en la base de datos.\\n¿Podrías verificar el nombre de estos productos?`,\n      sin_coincidencia: true\n    }\n  }];\n}\n\n// 2) Si hay sugerencias pendientes\nif (sugerenciasAcumuladas.length > 0) {\n  const primeraSugerencia = sugerenciasAcumuladas[0];\n  \n  let opciones = primeraSugerencia.opciones.map(s => {\n    let numEmoji = [\"1️⃣\",\"2️⃣\",\"3️⃣\",\"4️⃣\",\"5️⃣\"][s.opcion - 1] || `${s.opcion})`;\n    return `${numEmoji} ${s.producto}`;\n  }).join(\"\\n\");\n  \n// NUEVO: Mensaje que muestra productos ya resueltos PRIMERO\nlet mensajeConContexto = \"\";\nif (productosResueltos.length > 0) {\n  mensajeConContexto = `✅ Ya confirmé: ${productosResueltos.join(\", \")}\\n\\n`;\n}\nmensajeConContexto += `🤔 No estuve 100% seguro con \"${primeraSugerencia.apodo_usado}\".\\n\\n¿Te refieres a alguna de estas opciones?\\n\\n${opciones}\\n\\n💬 Responde con el número`;\n  \n  return [{\n    json: {\n      mensaje_original: mensajeOriginal,\n      estado: {\n        requiere_confirmacion: true,\n        mensaje_procesado: mensajeProcesado,\n        productos_resueltos: productosResueltos, // NUEVO: Productos ya confirmados\n        reemplazos_realizados: todosLosReemplazos,\n        sugerencias: primeraSugerencia.opciones,\n        productos_no_encontrados: [],\n        apodo_usado: primeraSugerencia.apodo_usado // NUEVO: Para reemplazar después\n      },\n      mensaje_final: mensajeConContexto,\n      requiere_confirmacion: true,\n      apodo_usado: primeraSugerencia.apodo_usado,\n      productos_restantes: sugerenciasAcumuladas.slice(1)\n    }\n  }];\n}\n\n// 3) Todos los productos fueron procesados exitosamente\nreturn [{\n  json: {\n    mensaje_original: mensajeOriginal,\n    estado: {\n      requiere_confirmacion: false,\n      mensaje_procesado: mensajeProcesado,\n      productos_resueltos: productosResueltos,\n      reemplazos_realizados: todosLosReemplazos,\n      sugerencias: [],\n      productos_no_encontrados: []\n    },\n    mensaje_final: mensajeProcesado,\n    productos_reemplazados: todosLosReemplazos.length > 0,\n    total_productos_procesados: detectados.length\n  }\n}];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-2480,784],"id":"58873436-e39c-438d-8bc6-d6f12d4d1de5","name":"calcularSimilitud1"},{"parameters":{"jsCode":"const mensaje = String($json.texto_convertido || \"\").trim();\nconst sessionid = $json.sessionid;\nconst esNumero = /^[1-9]\\d*$/.test(mensaje);\n\n// Si hay estado en Postgres, lo obtenemos del Merge\nconst estadoItems = $items(\"Verificar estado pendiente\");\nconst tieneEstadoPendiente = estadoItems.length > 0 && estadoItems[0].json.estado;\n\nif (esNumero && tieneEstadoPendiente) {\n  const estado = estadoItems[0].json.estado;\n  \n  if (estado.requiere_confirmacion && estado.sugerencias) {\n    const indice = parseInt(mensaje, 10) - 1;\n    const sugerencia = estado.sugerencias[indice];\n    \n    if (!sugerencia) {\n      return [{\n        json: {\n          mensaje_final: \"❌ Opción inválida. Responde con un número de la lista.\",\n          enviar_directo: true,\n          mantener_estado: true,\n          sessionid: sessionid,\n          accion: \"error_opcion\"\n        }\n      }];\n    }\n    \n    // NUEVO: Reconstruir mensaje completo\n    let mensajeFinal = \"\";\n    \n    // 1. Agregar productos ya resueltos\n    if (estado.productos_resueltos && estado.productos_resueltos.length > 0) {\n      mensajeFinal = estado.productos_resueltos.join(\" y \");\n    }\n    \n    // 2. Agregar producto confirmado\n    const mensajeOriginal = estado.mensaje_procesado || \"\";\n    const regex = new RegExp(`\"${estado.apodo_usado}\"`, 'g');\n    const parteConfirmada = mensajeOriginal.match(new RegExp(`\\\\d+\\\\s+\"${estado.apodo_usado}\"`, 'g'));\n    \n    if (parteConfirmada) {\n      const cantidadYProducto = parteConfirmada[0].replace(`\"${estado.apodo_usado}\"`, sugerencia.producto);\n      if (mensajeFinal) {\n        mensajeFinal += \" y \" + cantidadYProducto;\n      } else {\n        mensajeFinal = cantidadYProducto;\n      }\n    }\n    \n    return [{\n      json: {\n        final_message: mensajeFinal,\n        sessionid: sessionid,\n        datetime: $json.datetime,\n        es_respuesta_sugerencia: true,\n        producto_confirmado: true,\n        eliminar_estado: true,\n        accion: \"confirmar_sugerencia\",\n        // NUEVOS CAMPOS PARA SHEETS:\n        apodo_confirmado: estado.apodo_usado,        // \"qrepa\"\n        producto_seleccionado: sugerencia.producto  // \"Arepas de QUESO\"\n      }\n    }];\n  }\n}\n\n// Si el usuario envía algo diferente mientras tiene sugerencias pendientes\nif (tieneEstadoPendiente) {\n  return [{\n    json: {\n      final_message: $json.texto_convertido,\n      sessionid: sessionid,\n      datetime: $json.datetime,\n      es_respuesta_sugerencia: false,\n      eliminar_estado: true,\n      procesar_nuevo_mensaje: true,\n      accion: \"limpiar_y_procesar\"\n    }\n  }];\n}\n\n// Flujo normal - no hay estado pendiente\nreturn [{\n  json: {\n    final_message: $json.texto_convertido,\n    sessionid: sessionid,\n    datetime: $json.datetime,\n    es_respuesta_sugerencia: false,\n    accion: \"flujo_normal\"\n  }\n}];"},"id":"478df667-3ec9-4c67-ac5b-185029c46e39","name":"¿Es respuesta a sugerencia?","type":"n8n-nodes-base.code","typeVersion":2,"position":[-5088,752]},{"parameters":{"assignments":{"assignments":[{"id":"b312d7b6-e979-4e5a-a0a1-bef82730196e","name":"sessionid","value":"={{ $json.body.data.key.remoteJid }}","type":"string"},{"id":"d0338f07-19d6-4a5c-a1fc-da38909ba858","name":"estado","value":"={\n  \"mensaje_original\": \"{{$json.body.data.message.conversation}}\",\n  \"requiere_confirmacion\": false,\n  \"items\": []\n}\n","type":"object"},{"id":"86953061-57dd-4c4a-958f-cf6d1151a0ed","name":"texto","value":"={{ $json.body.data.messageType }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-6832,800],"id":"33929f87-ae7c-4773-889c-180050a48a65","name":"prepararEstado"},{"parameters":{"assignments":{"assignments":[{"id":"ed4a047a-26b3-444d-9f46-129708b6c95c","name":"final_message","value":"={{ $json.content.parts[0].text }}","type":"string"},{"id":"e54889f0-01ca-4a0d-a8e5-3beb8d152d81","name":"sessionid","value":"={{ $('IF1').item.json.sessionid }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-3584,656],"id":"d5923c4b-3741-44e6-a255-a126875fc2b6","name":"campos"},{"parameters":{"operation":"select","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"conversaciones_pendientes","mode":"list","cachedResultName":"conversaciones_pendientes"},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-5696,864],"id":"b1134b4f-8d66-4a62-a813-900d26132ff3","name":"Verificar estado pendiente","alwaysOutputData":true,"credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"04b937d7-cccc-4b3a-947b-9e9ac4b73517","leftValue":"={{ $json.accion }}","rightValue":"confirmar_sugerencia","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"confirmar_sugerencia"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"50c8e025-9b71-4083-a021-4400931830da","leftValue":"={{ $json.accion }}","rightValue":"limpiar_y_procesar","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"limpiar_y_procesar"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"229c9958-6639-4c19-8634-3f7d93de7623","leftValue":"={{ $json.accion }}","rightValue":"flujo_normal","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"flujo_normal"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.accion }}","rightValue":"=error_opcion","operator":{"type":"string","operation":"equals"},"id":"6d7e1e82-029d-49f2-a57b-9c6c85677a0e"}],"combinator":"and"},"renameOutput":true,"outputKey":"error_opcion"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[-4928,720],"id":"3bd7a4b4-3452-4029-8b34-11976f47dfad","name":"Switch Router de acciones"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"c9d48364-8878-4fd8-92af-6eea5758a905","leftValue":"={{ $json.estado.requiere_confirmacion === false && $json.productos_reemplazados === true }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"renameOutput":true,"outputKey":"Productos encontrados"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"081fc36a-bd9a-429b-958b-f6000c3dd8c2","leftValue":"={{ $json.sin_productos }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"renameOutput":true,"outputKey":"sin productos"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"9a1a6b49-c172-43dc-8e62-71895aa81f67","leftValue":"={{ $json.sin_coincidencia }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"renameOutput":true,"outputKey":"Productos no encontrados"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.estado.requiere_confirmacion }}","rightValue":true,"operator":{"type":"boolean","operation":"equals"},"id":"668c1461-783b-4b99-b507-37c98115ff20"}],"combinator":"and"},"renameOutput":true,"outputKey":"requiere_sugerencias"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[-2208,768],"id":"124fa33a-0a76-4d39-9116-a2eaa89feac6","name":"Switch Requiere confirmación"},{"parameters":{"operation":"executeQuery","query":"INSERT INTO conversaciones_pendientes (sessionid, estado)\nVALUES (\n  '{{ $(\"¿Es respuesta a sugerencia?\").first().json.sessionid }}',\n  '{{ JSON.stringify($json.estado) }}'::jsonb\n)\nON CONFLICT (sessionid) DO UPDATE\nSET estado = EXCLUDED.estado,\n    expires_at = now() + interval '10 minutes';","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-2000,1248],"id":"eadfbd2d-634e-4b41-aa90-487f412f0089","name":"Guardar sugerencias en Postgres","credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"resource":"messages-api","instanceName":"={{ $('Webhook').first().json.body.instance }}","remoteJid":"={{ $('¿Es respuesta a sugerencia?').first().json.sessionid }}","messageText":"={{ $('calcularSimilitud1').item.json.mensaje_final }}","options_message":{}},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[-1808,1248],"id":"e846f698-123b-4928-b615-df7c977fc6c9","name":"Enviar sugerencias WhatsApp","credentials":{"evolutionApi":{"id":"KDzQAvjURY1uhhvT","name":"Evolution account"}}},{"parameters":{"operation":"executeQuery","query":"DELETE FROM conversaciones_pendientes \nWHERE sessionid = '{{ $json.sessionid }}'","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-4528,416],"id":"9660469a-6340-4cb6-b9c0-df0a39166b7e","name":"Eliminar estado confirmado","credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"options_Create_instance":{}},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[-4624,928],"id":"f2b3a657-7228-4c34-bec3-044637a717d7","name":"Enviar sugerencias WhatsApp2","credentials":{"evolutionApi":{"id":"KDzQAvjURY1uhhvT","name":"Evolution account"}},"disabled":true},{"parameters":{},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[-5904,736],"id":"e69680c6-b089-46f9-b583-257754340c73","name":"Merge Audio/Texto"},{"parameters":{},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[-5344,752],"id":"86e10993-b0c6-4fa2-b112-9572b36f02d5","name":"Merge final"},{"parameters":{"operation":"executeQuery","query":"DELETE FROM conversaciones_pendientes \nWHERE sessionid = '{{ $json.sessionid }}'","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-4592,640],"id":"37ac5771-5cde-4528-8b2f-344dd9f9c3a3","name":"Eliminar estado confirmado1","credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"jsCode":"// En lugar de referenciar otros nodos, usar el input directo\nreturn [{\n  json: {\n    texto_para_administrador: $json.mensaje_final || $json.final_message || \"Error\"\n  }\n}];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-1616,480],"id":"a285d00c-b2f0-44e5-ac86-5a393938e213","name":"mensajeListo"},{"parameters":{"assignments":{"assignments":[{"id":"5b107e9d-1bce-43c0-8423-f1bd63235a3f","name":"final_message","value":"={{ $('¿Es respuesta a sugerencia?').item.json.final_message }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-4160,416],"id":"3e9f2c86-5a85-4604-9bde-3027794f7273","name":"Edit Fields"},{"parameters":{"workflowId":{"__rl":true,"value":"DsmGHHn7nCIHEQYU","mode":"list","cachedResultUrl":"/workflow/DsmGHHn7nCIHEQYU","cachedResultName":"actualizar_precio"},"workflowInputs":{"mappingMode":"defineBelow","value":{"mensaje":"={{ $('mensajeListo').item.json.texto_para_administrador }}","telefono":"={{ $('¿Es respuesta a sugerencia?').first().json.sessionid }}","fecha":"={{ $('¿Es respuesta a sugerencia?').first().json.datetime }}","instancia":"={{ $('Webhook').first().json.body.instance }}"},"matchingColumns":[],"schema":[{"id":"mensaje","displayName":"mensaje","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"telefono","displayName":"telefono","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"instancia","displayName":"instancia","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"fecha","displayName":"fecha","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"}],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[-240,144],"id":"c53ae533-5b35-4354-a993-6f33a2bc7f84","name":"actualizarPrecios"},{"parameters":{"operation":"executeQuery","query":"SELECT \n    producto AS \"PRODUCTO\",\n    apodo AS \"APODO\"\nFROM apodos_productos\nWHERE activo = true\nORDER BY producto, apodo","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-3168,816],"id":"702ecc33-2d2d-4c9b-8c43-f3810e58ff15","name":"obtenerApodos1","credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"INSERT INTO apodos_productos (producto, apodo, fuente)\nVALUES (\n    '{{ $(\"¿Es respuesta a sugerencia?\").item.json.producto_seleccionado }}',\n    '{{ $(\"¿Es respuesta a sugerencia?\").item.json.apodo_confirmado }}',\n    'confirmacion_usuario'\n)\nON CONFLICT (producto, apodo) \nDO UPDATE SET \n    fecha_creacion = CURRENT_TIMESTAMP,\n    activo = true\nRETURNING *;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-3920,288],"id":"75389b50-ad95-4a32-a508-a2cbe49da2ae","name":"Guardar apodo aprendido","credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"httpMethod":"POST","path":"mensajes","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2.1,"position":[-7104,800],"id":"31789281-730e-4980-9707-77f72d97c5d4","name":"Webhook","webhookId":"60397f41-3005-47aa-92f0-545e2dae408f"},{"parameters":{"resource":"messages-api","instanceName":"={{ $('Webhook').first().json.body.instance }}","remoteJid":"={{ $('Webhook').first().json.body.data.key.remoteJid }}","messageText":"={{ $('calcularSimilitud1').item.json.mensaje_final }}","options_message":{}},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[-1872,864],"id":"7c612ffd-b7da-4a74-8f6e-3a2ad26d3252","name":"Productos no encontrados","credentials":{"evolutionApi":{"id":"KDzQAvjURY1uhhvT","name":"Evolution account"}}},{"parameters":{"modelId":{"__rl":true,"value":"models/gemini-2.0-flash","mode":"list","cachedResultName":"models/gemini-2.0-flash"},"messages":{"values":[{"content":"={{ $('¿Es respuesta a sugerencia?').item.json.final_message }} {{ $('Merge final').first().json.final_message }}"}]},"options":{"systemMessage":"=Analizador de Mensajes - Marcado de Productos\nTU FUNCIÓN\nAnalizar mensajes y marcar entre comillas (\"\") los apodos de productos que existan en la base de datos REFERENCIAS.\n\nPROCESO OBLIGATORIO\nPASO 1: CONSULTAR REFERENCIAS\nSIEMPRE debes ejecutar la tool PostgreSQL \"REFERENCIAS\" al inicio, sin importar el contenido del mensaje.\nEsta tool te devolverá una tabla con la columna \"apodo\" que contiene todos los apodos válidos.\nPASO 2: PROCESAR EL MENSAJE\n\nLee el mensaje completo de izquierda a derecha\nIdentifica cada cantidad (número) en el mensaje\nPara cada cantidad, identifica el texto que le sigue\nSi el texto es \"combo\" o \"combos\", aplica la regla especial (ver abajo)\nSi NO es \"combo\", busca en los apodos de REFERENCIAS:\n\nBusca TODAS las posibles coincidencias para ese segmento\nSelecciona el apodo MÁS LARGO que coincida completamente\nMarca ese apodo entre comillas (\"\")\n\n\nContinúa con la siguiente cantidad\n\nPASO 3: DEVOLVER RESULTADO\n\nSi encontraste apodos: devuelve el mensaje con los apodos marcados entre comillas\nSi NO encontraste apodos: devuelve el mensaje exactamente como llegó, sin cambios\n\nREGLA ESPECIAL: COMBO\nCuando encuentres \"combo\" o \"combos\":\n\nReemplázalo por: cantidad \"arepa con queso\" cantidad \"chorizo\"\nEjemplo: \"2 combo\" → 2 \"arepa con queso\" 2 \"chorizo\"\nEjemplo: \"1 combo\" → 1 \"arepa con queso\" 1 \"chorizo\"\n\nEsta es la única palabra que no necesitas buscar en REFERENCIAS.\nREGLAS DE MARCADO\nSÍ marcar entre comillas:\n\nApodos que existan en la columna \"apodo\" de REFERENCIAS\nUn solo apodo por cada cantidad (el más largo que coincida)\n\nNO marcar entre comillas:\n\nNúmeros de cantidad (1, 2, 3, etc.)\nPalabras contextuales (quiero, dame, vendo, entraron, cajas de, pacas de, me tomé, etc.)\nPalabras que NO estén en REFERENCIAS\nLa palabra \"producto\"\n\nPrioridad de búsqueda:\n\nSIEMPRE busca primero el apodo más largo que coincida completamente\nUna vez encontrado un apodo para una cantidad, NO busques más para esa misma cantidad\nSi un apodo contiene palabras que también son apodos más cortos, usa el más largo\n\nEJEMPLOS DE ESTRUCTURA\nEjemplo 1: Mensaje con productos válidos\nInput: \"2 X 3 Y\"\nSi X e Y están en REFERENCIAS:\nOutput: 2 \"X\" 3 \"Y\"\nEjemplo 2: Mensaje sin productos válidos\nInput: \"hola como estas\"\nOutput: hola como estas\nEjemplo 3: Combo\nInput: \"1 combo\"\nOutput: 1 \"arepa con queso\" 1 \"chorizo\"\nEjemplo 4: Con palabras contextuales\nInput: \"entraron 2 cajas de X\"\nSi X está en REFERENCIAS:\nOutput: entraron 2 cajas de \"X\"\nEjemplo 5: Apodo largo vs corto\nSi REFERENCIAS tiene: \"X\", \"X premium\"\nInput: \"1 X premium\"\nOutput: 1 \"X premium\"\nEjemplo 6: Productos repetidos\nInput: \"1 X 2 X\"\nSi X está en REFERENCIAS:\nOutput: 1 \"X\" 2 \"X\"\nRESTRICCIONES CRÍTICAS\n\nNUNCA inventes apodos que no estén en REFERENCIAS\nNUNCA uses apodos de ejemplos o conversaciones anteriores\nSIEMPRE consulta REFERENCIAS antes de procesar\nSi NO hay coincidencias, devuelve el mensaje sin cambios. NO expliques por qué no encontraste productos. NO sugieras nada. Solo devuelve el mensaje original exactamente como lo recibiste.\nNO agregues, elimines o modifiques palabras del mensaje original (excepto marcar apodos con comillas)\n\nRECORDATORIO\nTu única fuente de verdad es la columna \"apodo\" de la tabla REFERENCIAS en PostgreSQL. Si un apodo no está ahí, no existe."}},"type":"@n8n/n8n-nodes-langchain.googleGemini","typeVersion":1,"position":[-4000,752],"id":"eb50d8de-9e5a-4209-bf8e-e4c33d3ea9ac","name":"Message a model","credentials":{"googlePalmApi":{"id":"2llV2c1H3lSUoFpn","name":"milenaGRATIS"}}},{"parameters":{"operation":"select","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"apodos_productos","mode":"list","cachedResultName":"apodos_productos"},"returnAll":"=Consulta todos los apodos disponibles en la columna 'apodo' de la tabla apodos_productos. Ejecuta esta tool al inicio de cada mensaje para obtener la lista completa de apodos válidos.","options":{}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.6,"position":[-3760,992],"id":"e29a2e4e-f003-4600-a0ec-2ec63c94bd8a","name":"REFERENCIAS","credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}}],"connections":{"Transcribe a recording1":{"main":[[{"node":"Code5","type":"main","index":0}]]},"Code5":{"main":[[{"node":"Final_message_audio","type":"main","index":0}]]},"Final_message_audio":{"main":[[{"node":"Merge Audio/Texto","type":"main","index":0}]]},"FInal_message_text":{"main":[[{"node":"Merge Audio/Texto","type":"main","index":1}]]},"Code8":{"main":[[{"node":"FInal_message_text","type":"main","index":0}]]},"Switch2":{"main":[[{"node":"Obter m dia em base64","type":"main","index":0}],[{"node":"Code8","type":"main","index":0}]]},"Convert to File1":{"main":[[{"node":"Transcribe a recording1","type":"main","index":0}]]},"Google Gemini Chat Model1":{"ai_languageModel":[[{"node":"Administrador1","type":"ai_languageModel","index":0}]]},"IF1":{"main":[[{"node":"Execute Workflow1","type":"main","index":0}],[{"node":"Message a model","type":"main","index":0}]]},"Switch":{"main":[[{"node":"registroVentas","type":"main","index":0}],[{"node":"actualizarPrecios","type":"main","index":0}],[{"node":"consumoPersonal","type":"main","index":0}],[{"node":"informeVentas","type":"main","index":0}],[{"node":"ingresarProductoInventario","type":"main","index":0}],[{"node":"crearProducto","type":"main","index":0}]]},"Administrador1":{"main":[[{"node":"Switch","type":"main","index":0}]]},"producto_detectado":{"main":[[{"node":"obtenerApodos1","type":"main","index":0},{"node":"Merge","type":"main","index":0}]]},"Merge":{"main":[[{"node":"calcularSimilitud1","type":"main","index":0}]]},"calcularSimilitud1":{"main":[[{"node":"Switch Requiere confirmación","type":"main","index":0}]]},"¿Es respuesta a sugerencia?":{"main":[[{"node":"Switch Router de acciones","type":"main","index":0}]]},"prepararEstado":{"main":[[{"node":"Switch2","type":"main","index":0}]]},"campos":{"main":[[{"node":"producto_detectado","type":"main","index":0}]]},"Verificar estado pendiente":{"main":[[{"node":"Merge final","type":"main","index":1}]]},"Switch Router de acciones":{"main":[[{"node":"Eliminar estado confirmado","type":"main","index":0}],[{"node":"Eliminar estado confirmado1","type":"main","index":0}],[{"node":"IF1","type":"main","index":0}],[{"node":"Enviar sugerencias WhatsApp2","type":"main","index":0}]]},"Switch Requiere confirmación":{"main":[[{"node":"mensajeListo","type":"main","index":0}],[{"node":"mensajeListo","type":"main","index":0}],[{"node":"Productos no encontrados","type":"main","index":0}],[{"node":"Guardar sugerencias en Postgres","type":"main","index":0}]]},"Eliminar estado confirmado":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Merge Audio/Texto":{"main":[[{"node":"Merge final","type":"main","index":0},{"node":"Verificar estado pendiente","type":"main","index":0}]]},"Merge final":{"main":[[{"node":"¿Es respuesta a sugerencia?","type":"main","index":0}]]},"Eliminar estado confirmado1":{"main":[[{"node":"IF1","type":"main","index":0}]]},"mensajeListo":{"main":[[{"node":"Administrador1","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"mensajeListo","type":"main","index":0},{"node":"Guardar apodo aprendido","type":"main","index":0}]]},"obtenerApodos1":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Obter m dia em base64":{"main":[[{"node":"Convert to File1","type":"main","index":0}]]},"Guardar sugerencias en Postgres":{"main":[[{"node":"Enviar sugerencias WhatsApp","type":"main","index":0}]]},"Webhook":{"main":[[{"node":"prepararEstado","type":"main","index":0}]]},"Message a model":{"main":[[{"node":"campos","type":"main","index":0}]]},"REFERENCIAS":{"ai_tool":[[{"node":"Message a model","type":"ai_tool","index":0}]]}},"settings":{"executionOrder":"v1","callerPolicy":"workflowsFromSameOwner","executionTimeout":15,"timezone":"America/Bogota","availableInMCP":false,"errorWorkflow":"6372jK3MqgOJM8iD"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Webhook":[{"json":{"headers":{"host":"n8n-n8n.aa7tej.easypanel.host","user-agent":"axios/1.10.0","content-length":"935","accept":"application/json, text/plain, */*","accept-encoding":"gzip, compress, deflate, br","content-type":"application/json","x-forwarded-for":"52.15.92.133","x-forwarded-host":"n8n-n8n.aa7tej.easypanel.host","x-forwarded-port":"443","x-forwarded-proto":"https","x-forwarded-server":"4473dde1486f","x-real-ip":"52.15.92.133"},"params":{},"query":{},"body":{"event":"messages.upsert","instance":"pepe cadena","data":{"key":{"remoteJid":"573103015865@s.whatsapp.net","fromMe":false,"id":"ACDD15DFAEE36E076EC06EDFCA499967","senderLid":"14942191255771@lid"},"pushName":"Alejandro","status":"DELIVERY_ACK","message":{"conversation":"Me comi un combo","messageContextInfo":{"deviceListMetadata":{"senderKeyHash":"e3GnwCc3oAo36g==","senderTimestamp":"1759729980","recipientKeyHash":"YccVFyADqLRqkw==","recipientTimestamp":"1759724192"},"deviceListMetadataVersion":2,"messageSecret":"nVG1kMINJcRsu7jtqqs8aEOJKsskE+5RObHBe5vW8WI="}},"messageType":"conversation","messageTimestamp":1759876299,"instanceId":"e2641f01-672d-413c-9caa-65edc2407abb","source":"android"},"destination":"https://n8n-n8n.aa7tej.easypanel.host/webhook/mensajes","date_time":"2025-10-07T19:31:39.818Z","sender":"573102304801@s.whatsapp.net","server_url":"http://52.15.92.133:8080","apikey":"05D47DF5AC05-4085-B0A2-FB7E4510CE36"},"webhookUrl":"https://n8n-n8n.aa7tej.easypanel.host/webhook/mensajes","executionMode":"production"}}]},"versionId":"c9404c28-ec2c-4513-a9c7-603d18860407","triggerCount":1,"shared":[{"createdAt":"2025-10-06T05:11:25.667Z","updatedAt":"2025-10-06T05:11:25.667Z","role":"workflow:owner","workflowId":"nXXVsGr895OEIu0Q","projectId":"5qz94e5MiZbyOPrk"}],"tags":[]}