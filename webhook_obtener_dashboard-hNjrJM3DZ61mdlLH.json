{"createdAt":"2025-10-12T22:03:37.965Z","updatedAt":"2025-10-17T04:08:49.000Z","id":"hNjrJM3DZ61mdlLH","name":"webhook_obtener_dashboard","active":false,"isArchived":true,"nodes":[{"parameters":{"httpMethod":"POST","path":"obtener-dashboard","responseMode":"lastNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2.1,"position":[-192,176],"id":"7434caea-194c-4ad6-97eb-e62fee1e600a","name":"Webhook","webhookId":"46e8d89e-b33e-41ed-aae9-0ee653315912"},{"parameters":{"jsCode":"const fechaInicio = $input.item.json.body.fecha_inicio || new Date().toISOString().split('T')[0];\nconst fechaFin = $input.item.json.body.fecha_fin || fechaInicio;\n\nreturn {\n  fecha_inicio: fechaInicio,\n  fecha_fin: fechaFin\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[32,176],"id":"95ea84bc-1b41-412e-827f-3b85057a36c7","name":"Code in JavaScript"},{"parameters":{"operation":"executeQuery","query":"SELECT \n  producto,\n  SUM(cantidad) as cantidad_total,\n  SUM(valor_total) as valor_total,\n  MAX(valor_unitario) as precio_unitario\nFROM ventas\nWHERE fecha::date BETWEEN '{{ $json.fecha_inicio }}' AND '{{ $json.fecha_fin }}'\nGROUP BY producto\nORDER BY valor_total DESC\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[448,-208],"id":"21def570-afed-4180-9ffa-6de2d9092af6","name":"primer consulta - ventas","executeOnce":true,"credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"SELECT \n  producto,\n  SUM(cantidad) as cantidad_total,\n  SUM(precio * cantidad) as valor_total\nFROM consumos_personales\nWHERE fecha BETWEEN '{{ $json.fecha_inicio }}' AND '{{ $json.fecha_fin }}'\nGROUP BY producto\nORDER BY cantidad_total DESC\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[448,-16],"id":"175ba1e7-6ff9-4006-bcef-035f17f8ea3c","name":"segunda consulta - consumos","executeOnce":true,"credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"SELECT \n  producto,\n  SUM(cantidad) as cantidad_total,\n  unidad_medida\nFROM registro_entrada_inventario\nWHERE fecha BETWEEN '{{ $json.fecha_inicio }}' AND '{{ $json.fecha_fin }}'\nGROUP BY producto, unidad_medida\nORDER BY cantidad_total DESC\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[448,176],"id":"a9e4585d-96f5-4e8c-892c-f0bfd1a4261b","name":"tercera consulta - entradas","executeOnce":true,"credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"SELECT \n  producto,\n  stock_actual_unidades as stock,\n  unidad_medida,\n  precio_ultima_compra as precio\nFROM cache_inventario\nORDER BY producto\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[448,368],"id":"2d0bca67-c540-4b48-a67d-2e687a1dbff0","name":"cuarta consulta - inventario actual","executeOnce":true,"credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"SELECT \n  COALESCE(SUM(valor_total), 0) as total_ventas,\n  COUNT(*) as numero_transacciones\nFROM ventas\nWHERE fecha::date BETWEEN '{{ $json.fecha_inicio }}' AND '{{ $json.fecha_fin }}'\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[448,560],"id":"ef5da905-76fd-450e-8158-d6ec119865ba","name":"TOTAL VENTAS","executeOnce":true,"credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"numberInputs":5},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[832,128],"id":"0155a6b9-f626-4fbe-a383-2139a66e214a","name":"Merge"},{"parameters":{"jsCode":"// Obtener todos los items\nconst items = $input.all();\n\n// Arrays para clasificar\nconst ventas = [];\nconst consumos = [];\nconst entradas = [];\nconst inventario = [];\nlet resumen = { total_ventas: 0, numero_transacciones: 0 };\n\n// Clasificar cada item (mismo código de antes)\nfor (const item of items) {\n  const data = item.json;\n  \n  if (data.precio_unitario !== undefined && data.precio_unitario !== null) {\n    ventas.push({\n      producto: data.producto,\n      cantidad_total: parseInt(data.cantidad_total) || 0,\n      valor_total: parseFloat(data.valor_total) || 0,\n      precio_unitario: parseFloat(data.precio_unitario) || 0\n    });\n  }\n  else if (data.valor_total !== undefined && data.precio_unitario === undefined && data.stock === undefined && data.unidad_medida === undefined) {\n    consumos.push({\n      producto: data.producto,\n      cantidad_total: parseInt(data.cantidad_total) || 0,\n      valor_total: parseFloat(data.valor_total) || 0\n    });\n  }\n  else if (data.unidad_medida !== undefined && data.cantidad_total !== undefined && data.stock === undefined) {\n    entradas.push({\n      producto: data.producto,\n      cantidad_total: parseInt(data.cantidad_total) || 0,\n      unidad_medida: data.unidad_medida\n    });\n  }\n  else if (data.stock !== undefined) {\n    inventario.push({\n      producto: data.producto,\n      stock: parseInt(data.stock) || 0,\n      unidad_medida: data.unidad_medida || \"\",\n      precio: data.precio ? parseFloat(data.precio) : 0\n    });\n  }\n  else if (data.total_ventas !== undefined) {\n    resumen = {\n      total_ventas: parseFloat(data.total_ventas) || 0,\n      numero_transacciones: parseInt(data.numero_transacciones) || 0\n    };\n  }\n}\n\n// Retornar como OBJETO único con el array adentro\nreturn {\n  json: {\n    ventas: ventas,\n    consumos: consumos,\n    entradas: entradas,\n    inventario: inventario,\n    resumen: resumen\n  }\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1152,192],"id":"e94db8cb-c74e-4ddb-b900-f78958537adf","name":"Code in JavaScript3"}],"connections":{"Webhook":{"main":[[{"node":"Code in JavaScript","type":"main","index":0}]]},"Code in JavaScript":{"main":[[{"node":"primer consulta - ventas","type":"main","index":0},{"node":"segunda consulta - consumos","type":"main","index":0},{"node":"tercera consulta - entradas","type":"main","index":0},{"node":"cuarta consulta - inventario actual","type":"main","index":0},{"node":"TOTAL VENTAS","type":"main","index":0}]]},"tercera consulta - entradas":{"main":[[{"node":"Merge","type":"main","index":2}]]},"segunda consulta - consumos":{"main":[[{"node":"Merge","type":"main","index":1}]]},"primer consulta - ventas":{"main":[[{"node":"Merge","type":"main","index":0}]]},"cuarta consulta - inventario actual":{"main":[[{"node":"Merge","type":"main","index":3}]]},"TOTAL VENTAS":{"main":[[{"node":"Merge","type":"main","index":4}]]},"Merge":{"main":[[{"node":"Code in JavaScript3","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Webhook":[{"json":{"headers":{"host":"n8n-n8n.aa7tej.easypanel.host","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36","content-length":"54","accept":"*/*","accept-encoding":"gzip, deflate, br, zstd","accept-language":"es-ES,es;q=0.9","content-type":"application/json","origin":"https://id-preview--e12effda-ab4d-4577-ad7c-82c0bbfd95a5.lovable.app","priority":"u=1, i","referer":"https://id-preview--e12effda-ab4d-4577-ad7c-82c0bbfd95a5.lovable.app/","sec-ch-ua":"\"Google Chrome\";v=\"141\", \"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"141\"","sec-ch-ua-mobile":"?0","sec-ch-ua-platform":"\"Windows\"","sec-fetch-dest":"empty","sec-fetch-mode":"cors","sec-fetch-site":"cross-site","x-forwarded-for":"191.107.188.232","x-forwarded-host":"n8n-n8n.aa7tej.easypanel.host","x-forwarded-port":"443","x-forwarded-proto":"https","x-forwarded-server":"4473dde1486f","x-real-ip":"191.107.188.232"},"params":{},"query":{},"body":{"fecha_inicio":"2025-10-12","fecha_fin":"2025-10-12"},"webhookUrl":"https://n8n-n8n.aa7tej.easypanel.host/webhook/obtener-dashboard","executionMode":"production"}}]},"versionId":"70934e99-1e17-49ae-9c5d-b8fa8a4c99a1","triggerCount":1,"shared":[{"createdAt":"2025-10-12T22:03:37.968Z","updatedAt":"2025-10-12T22:03:37.968Z","role":"workflow:owner","workflowId":"hNjrJM3DZ61mdlLH","projectId":"5qz94e5MiZbyOPrk"}],"tags":[]}