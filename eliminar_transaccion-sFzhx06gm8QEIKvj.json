{"createdAt":"2025-10-10T21:54:10.792Z","updatedAt":"2025-10-11T00:45:48.000Z","id":"sFzhx06gm8QEIKvj","name":"eliminar_transaccion","active":false,"isArchived":false,"nodes":[{"parameters":{"workflowInputs":{"values":[{"name":"Mensaje"},{"name":"instancia"},{"name":"fecha"},{"name":"telefono"}]}},"id":"c055762a-8fe7-4141-a639-df2372f30060","typeVersion":1.1,"name":"When Executed by Another Workflow","type":"n8n-nodes-base.executeWorkflowTrigger","position":[224,352]},{"parameters":{"modelId":{"__rl":true,"value":"models/gemini-2.0-flash","mode":"list","cachedResultName":"models/gemini-2.0-flash"},"messages":{"values":[{"content":"={{ $json.Mensaje }}"}]},"options":{"systemMessage":"=Eres un asistente que extrae información de mensajes de WhatsApp para procesar reversiones de ventas.\n\nTu tarea es extraer TODOS los IDs de ventas que el usuario quiere revertir.\n\nREGLAS:\n1. Extrae TODOS los números o códigos de venta del mensaje\n2. Los IDs pueden estar separados por comas, espacios, o la palabra \"y\"\n3. Acepta formatos: P001, 123, P050, etc.\n4. Devuelve un array con todos los IDs encontrados\n5. Si no hay IDs, devuelve un array vacío\n\nFORMATO DE RESPUESTA (JSON):\n{\n  \"venta_ids\": [\"ID1\", \"ID2\", \"ID3\"],\n  \"valido\": true/false\n}\n\nEJEMPLOS:\n\nMensaje: \"revertir P268\"\nRespuesta: {\"venta_ids\": [\"P268\"], \"valido\": true}\n\nMensaje: \"revertir P268, P269, P270\"\nRespuesta: {\"venta_ids\": [\"P268\", \"P269\", \"P270\"], \"valido\": true}\n\nMensaje: \"eliminar 268 269 270\"\nRespuesta: {\"venta_ids\": [\"268\", \"269\", \"270\"], \"valido\": true}\n\nMensaje: \"borrar P001 y P002\"\nRespuesta: {\"venta_ids\": [\"P001\", \"P002\"], \"valido\": true}\n\nMensaje: \"cancelar ventas 5, 10, 15\"\nRespuesta: {\"venta_ids\": [\"5\", \"10\", \"15\"], \"valido\": true}\n\nMensaje: \"hola\"\nRespuesta: {\"venta_ids\": [], \"valido\": false}\n\nIMPORTANTE: \n- Responde SOLO con el JSON\n- Siempre devuelve venta_ids como array, aunque sea un solo ID\n- Si hay al menos un ID válido, valido debe ser true"}},"type":"@n8n/n8n-nodes-langchain.googleGemini","typeVersion":1,"position":[432,352],"id":"7d0324ec-256d-4f72-86e1-19a6819ffa7f","name":"Message a model","credentials":{"googlePalmApi":{"id":"2llV2c1H3lSUoFpn","name":"milenaGRATIS"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"bd17279e-655a-43d7-bcdd-ba3e4824eedf","leftValue":"={{ $json.valido }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[1008,352],"id":"34c70098-001e-4eb6-9652-50241481fe5a","name":"If"},{"parameters":{"jsCode":"// Obtener la respuesta de Gemini\nconst geminiResponse = $input.first().json;\n\n// Extraer el texto de la respuesta\nconst textResponse = geminiResponse.content?.parts?.[0]?.text || '';\n\n// Limpiar los bloques de código markdown (```json ... ```)\nconst jsonText = textResponse\n  .replace(/```json\\n/g, '')\n  .replace(/```/g, '')\n  .trim();\n\n// Parsear el JSON\nlet parsedData;\ntry {\n  parsedData = JSON.parse(jsonText);\n  \n  // Formatear los IDs: agregar P si no lo tienen y hacer padding\n  if (parsedData.venta_ids && Array.isArray(parsedData.venta_ids)) {\n    parsedData.venta_ids = parsedData.venta_ids.map(id => {\n      const ventaId = id.toString().trim();\n      \n      // Si es solo número, agregar P y padding\n      if (/^\\d+$/.test(ventaId)) {\n        return 'P' + ventaId.padStart(3, '0');\n      }\n      // Si ya tiene P, asegurar el formato correcto\n      else if (/^P\\d+$/i.test(ventaId)) {\n        const numero = ventaId.substring(1);\n        return 'P' + numero.padStart(3, '0');\n      }\n      // Si tiene otro formato, devolver tal cual\n      return ventaId;\n    });\n    \n    // Validar que haya al menos un ID\n    parsedData.valido = parsedData.venta_ids.length > 0;\n  } else {\n    parsedData.valido = false;\n    parsedData.venta_ids = [];\n  }\n  \n} catch (error) {\n  parsedData = {\n    venta_ids: [],\n    valido: false,\n    error: 'No se pudo parsear la respuesta'\n  };\n}\n\nreturn {\n  json: parsedData\n};"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[784,352],"id":"f5c04d2b-6ea5-45df-b04f-23a0dee8e419","name":"parsea"},{"parameters":{"resource":"messages-api","instanceName":"={{ $('When Executed by Another Workflow').first().json.instancia }}","remoteJid":"={{ $('When Executed by Another Workflow').first().json.telefono }}","messageText":"={{ $json.mensaje }}","options_message":{}},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[2320,-176],"id":"e2d9e274-0cb8-4cbb-95c6-81c380ff6c12","name":"Enviar texto","credentials":{"evolutionApi":{"id":"KDzQAvjURY1uhhvT","name":"Evolution account"}}},{"parameters":{"operation":"executeQuery","query":"SELECT \n  codigo_venta,\n  producto,\n  cantidad,\n  valor_unitario,\n  valor_total,\n  costo,\n  sessionid,\n  fecha\nFROM ventas \nWHERE codigo_venta = '{{ $json.venta_id }}'\nLIMIT 1;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[2272,0],"id":"2589e5fe-e6b5-4e85-a612-4f48f4c9ed25","name":"Buscar ventas","credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"respondWith":"json","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.4,"position":[1008,592],"id":"ff3977d9-524a-4b3e-8f7e-25bd0177342d","name":"Respond to Webhook"},{"parameters":{"jsCode":"// Obtener el array de venta_ids\nconst ventaIds = $input.first().json.venta_ids || [];\n\n// Convertir cada ID en un item separado\nreturn ventaIds.map(id => ({\n  json: {\n    venta_id: id\n  }\n}));"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1248,336],"id":"956dddf9-3063-44a4-a9f3-8e46f01cbe98","name":"Convertir IDs a items"},{"parameters":{"options":{"reset":false}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[1792,-16],"id":"fa3cc772-d7e9-4981-a40c-d18f34dc6bc5","name":"loop ventas"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"1f40b8ea-1033-40d5-8111-43d4a0e555d7","leftValue":"={{ $json.codigo_venta }}","rightValue":"","operator":{"type":"string","operation":"notEmpty","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[2464,0],"id":"47dac8a5-6431-43ed-9723-6712d849bdeb","name":"¿venta existe?"},{"parameters":{"operation":"executeQuery","query":"-- Eliminar la venta y devolver los datos\nWITH venta_eliminada AS (\n  DELETE FROM ventas \n  WHERE codigo_venta = '{{ $json.codigo_venta }}'\n  RETURNING codigo_venta, producto, cantidad, valor_total\n)\n-- Actualizar inventario y devolver los datos\nUPDATE cache_inventario \nSET \n  stock_actual_unidades = stock_actual_unidades + (SELECT cantidad FROM venta_eliminada),\n  updated_at = NOW()\nWHERE producto = (SELECT producto FROM venta_eliminada)\nRETURNING \n  (SELECT codigo_venta FROM venta_eliminada) as codigo_venta,\n  (SELECT producto FROM venta_eliminada) as producto,\n  (SELECT cantidad FROM venta_eliminada) as cantidad,\n  (SELECT valor_total FROM venta_eliminada) as valor_total;","options":{"queryBatching":"transaction"}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[2752,-16],"id":"60f6e366-59de-48db-9aa3-51a965faaa39","name":"Revertir Venta","alwaysOutputData":true,"credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"jsCode":"// Obtener todos los datos del nodo Revertir Venta\nconst allData = $('Revertir Venta').all();\n\n// Verificar si hay datos\nif (!allData || allData.length === 0) {\n  return [{\n    json: {\n      success: false,\n      total_revertidas: 0,\n      mensaje: \"⚠️ No se pudo revertir ninguna venta\"\n    }\n  }];\n}\n\n// Contar ventas procesadas exitosamente\nconst ventasRevertidas = allData.length;\n\n// Obtener detalles de cada venta\nconst detalles = allData.map(item => {\n  return `✅ ${item.json.codigo_venta}: ${item.json.producto} (${item.json.cantidad} unidades) - $${item.json.valor_total}`;\n}).join('\\n');\n\nreturn [{\n  json: {\n    success: true,\n    total_revertidas: ventasRevertidas,\n    mensaje: `🎉 ${ventasRevertidas} venta(s) revertida(s) exitosamente\\n\\n${detalles}`\n  }\n}];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2032,-176],"id":"3aaa0270-47d3-4c76-8b66-fbe420910ea4","name":"construir resumen"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.venta_id }}","rightValue":"P","operator":{"type":"string","operation":"startsWith"},"id":"d2e6bb75-0220-4011-8259-c27d8dfaa72e"}],"combinator":"and"},"renameOutput":true,"outputKey":"eliminar venta"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"d1b9c44a-6d53-484a-8f09-bfa5978a3d93","leftValue":"={{ $json.venta_id }}","rightValue":"L","operator":{"type":"string","operation":"startsWith"}}],"combinator":"and"},"renameOutput":true,"outputKey":"eliminar consumo"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.3,"position":[1456,336],"id":"ba8c94c8-4f97-4ea8-a5b8-355101f770a7","name":"Switch"}],"connections":{"When Executed by Another Workflow":{"main":[[{"node":"Message a model","type":"main","index":0}]]},"Message a model":{"main":[[{"node":"parsea","type":"main","index":0}]]},"parsea":{"main":[[{"node":"If","type":"main","index":0}]]},"If":{"main":[[{"node":"Convertir IDs a items","type":"main","index":0}],[{"node":"Respond to Webhook","type":"main","index":0}]]},"Buscar ventas":{"main":[[{"node":"¿venta existe?","type":"main","index":0}]]},"Convertir IDs a items":{"main":[[{"node":"Switch","type":"main","index":0}]]},"loop ventas":{"main":[[{"node":"construir resumen","type":"main","index":0}],[{"node":"Buscar ventas","type":"main","index":0}]]},"¿venta existe?":{"main":[[{"node":"Revertir Venta","type":"main","index":0}],[{"node":"loop ventas","type":"main","index":0}]]},"Revertir Venta":{"main":[[{"node":"loop ventas","type":"main","index":0}]]},"construir resumen":{"main":[[{"node":"Enviar texto","type":"main","index":0}]]},"Switch":{"main":[[{"node":"loop ventas","type":"main","index":0}],[]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"When Executed by Another Workflow":[{"json":{"Mensaje":"eliminar p005 y p004","instancia":"pepe cadena","fecha":"10/10/2025","telefono":"573103015865@s.whatsapp.net"}}]},"versionId":"ac691807-0b71-44d6-a76e-df1e3b02f5d8","triggerCount":0,"shared":[{"createdAt":"2025-10-10T21:54:10.806Z","updatedAt":"2025-10-10T21:54:10.806Z","role":"workflow:owner","workflowId":"sFzhx06gm8QEIKvj","projectId":"5qz94e5MiZbyOPrk"}],"tags":[]}