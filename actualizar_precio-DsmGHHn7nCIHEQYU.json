{"createdAt":"2025-10-07T00:19:11.014Z","updatedAt":"2025-10-18T17:24:19.000Z","id":"DsmGHHn7nCIHEQYU","name":"actualizar_precio","active":false,"isArchived":false,"nodes":[{"parameters":{"promptType":"define","text":"={{ $json.mensaje }}","options":{"systemMessage":"=#ROL\nTu funcion es extraer productos y precios, para devolverlos en las variables PRODUCTO y PRECIO_UNITARIO\n\n#FORMATO DE SALIDA\nes para modificar precios de productos entonces, hazlo para que el siguiente nodo los pueda agregar a la hoja de sheets correctamente\n\nEjemplos de formatos válidos:\nUn solo producto:\n\"PRODUCTO: Chorizos\\nPRECIO_UNITARIO: 8500\"\n\nMúltiples productos:\n\"PRODUCTO: Chorizos\\nPRECIO_UNITARIO: 8500\\n\\nPRODUCTO: Arepas de queso\\nPRECIO_UNITARIO: 2200\\n\\nPRODUCTO: Tintos\\nPRECIO_UNITARIO: 1500\"\n\n# REGLAS IMPORTANTES:\n1. **NO uses los productos de los ejemplos** (son solo para mostrar la estructura)\n2. Los ejemplos solo muestran la ESTRUCTURA, no los productos a devolver"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[1056,-16],"id":"e9268a79-2738-4a63-8050-47485aadef86","name":"AI Agent"},{"parameters":{"modelName":"models/gemini-2.0-flash","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[1024,160],"id":"f857efe6-4d7e-4296-a891-94176011ad4f","name":"Google Gemini Chat Model2","credentials":{"googlePalmApi":{"id":"2llV2c1H3lSUoFpn","name":"milenaGRATIS"}}},{"parameters":{"jsCode":"// Obtener los datos de entrada\nconst inputData = $input.all();\n\n// Función para parsear el output y convertirlo al formato requerido\nfunction parseOutputToSheetFormat(data) {\n    const results = [];\n    \n    // Procesar cada item de entrada\n    data.forEach((item, index) => {\n        try {\n            // Obtener el texto del output\n            const outputText = item.json.output;\n            \n            if (!outputText) {\n                console.log(`Item ${index}: No se encontró campo 'output'`);\n                return;\n            }\n            \n            // Llama a la nueva función que maneja múltiples productos\n            const parsedItems = parseMultipleProductData(outputText);\n            \n            if (parsedItems.length > 0) {\n                // Agregar cada producto individual a los resultados\n                parsedItems.forEach(product => {\n                    results.push({\n                        PRODUCTO: product.PRODUCTO,\n                        PRECIO_UNITARIO: product.PRECIO_UNITARIO,\n                        item_index: index,\n                        original_output: outputText\n                    });\n                });\n            } else {\n                console.log(`Item ${index}: No se pudieron extraer datos válidos`);\n                // Agregar item con error para tracking\n                results.push({\n                    PRODUCTO: 'ERROR_PARSING',\n                    PRECIO_UNITARIO: 0,\n                    error: 'No se pudieron extraer producto y precio',\n                    original_output: outputText,\n                    item_index: index\n                });\n            }\n            \n        } catch (error) {\n            console.log(`Error procesando item ${index}:`, error.message);\n            results.push({\n                PRODUCTO: 'ERROR',\n                PRECIO_UNITARIO: 0,\n                error: error.message,\n                item_index: index\n            });\n        }\n    });\n    \n    return results;\n}\n\n// ----> FUNCIÓN MODIFICADA <----\n// Ahora esta función procesa múltiples productos en una sola cadena de texto\nfunction parseMultipleProductData(outputText) {\n    const allProducts = [];\n    // Dividir el texto en bloques de productos, cada uno separado por dos saltos de línea\n    const productBlocks = outputText.split('\\n\\n');\n\n    productBlocks.forEach(block => {\n        const lines = block.split('\\n');\n        \n        // Asume que el primer elemento es el producto y el segundo el precio\n        if (lines.length >= 2) {\n            const productNameMatch = lines[0].match(/PRODUCTO:\\s*(.*)/i);\n            const productPriceMatch = lines[1].match(/PRECIO_UNITARIO:\\s*(\\d+)/i);\n            \n            if (productNameMatch && productPriceMatch) {\n                const productName = productNameMatch[1].trim();\n                const productPrice = parseInt(productPriceMatch[1], 10);\n\n                if (productName && !isNaN(productPrice)) {\n                    allProducts.push({\n                        PRODUCTO: productName,\n                        PRECIO_UNITARIO: productPrice\n                    });\n                }\n            }\n        }\n    });\n\n    return allProducts;\n}\n\n// Función para limpiar el nombre del producto (ya no necesaria con el nuevo enfoque)\n// function cleanProductName(producto) { ... }\n\n// Ejecutar el procesamiento\nconsole.log('Datos de entrada:', JSON.stringify(inputData, null, 2));\nconst parsedResults = parseOutputToSheetFormat(inputData);\nconsole.log('Resultados parseados:', JSON.stringify(parsedResults, null, 2));\n\n// Retornar los resultados en el formato esperado\nreturn parsedResults;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1488,-16],"id":"9c920cf8-af62-4ed4-80bd-05c379d22fe8","name":"Code3"},{"parameters":{"assignments":{"assignments":[{"id":"120fb570-4124-4f7f-865c-21f0d0c4d879","name":"mensaje","value":"={{ $('When Executed by Another Workflow').item.json.mensaje }}","type":"string"},{"id":"c676aea4-4382-4b97-bb6a-0e1487b1c8e7","name":"telefono","value":"={{ $('When Executed by Another Workflow').item.json.telefono }}","type":"string"},{"id":"ca406d0e-3f6c-41f8-856b-9b2e963d5770","name":"instancia","value":"={{ $('When Executed by Another Workflow').item.json.instancia }}","type":"string"},{"id":"830bfabf-f7aa-49e5-913b-61ec8b9dae86","name":"fecha","value":"={{ $('When Executed by Another Workflow').item.json.fecha }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[880,-16],"id":"00c6e325-2320-406c-a820-ebf54dd9f3dd","name":"Edit Fields"},{"parameters":{"assignments":{"assignments":[{"id":"8336937e-8054-4f2b-9208-2ae0b0c3ed46","name":"mensaje","value":"=✅ Precio actualizado\n\n{{ $json.producto }} = {{ parseInt($json.precio_unitario) }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1936,-16],"id":"e8f711f0-6470-4ebb-b54a-8dc043a1b667","name":"Edit Fields1"},{"parameters":{"resource":"messages-api","instanceName":"={{ $('Edit Fields').first().json.instancia }}","remoteJid":"={{ $('Edit Fields').first().json.telefono }}","messageText":"={{ $json.mensaje }}","options_message":{}},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[2096,-16],"id":"7f69c3bf-fc49-4967-84b5-a9ab268082b8","name":"Enviar texto","credentials":{"evolutionApi":{"id":"KDzQAvjURY1uhhvT","name":"Evolution account"}}},{"parameters":{"operation":"executeQuery","query":"UPDATE productos \nSET precio_unitario = {{ $json.nuevo_precio }},\n    updated_at = NOW(),\n    updated_by = '{{ $('Code - Verificar Autorización').item.json.user_id }}'\nWHERE tenant_id = '{{ $('Code - Verificar Autorización').item.json.tenant_id }}'\n  AND (codigo = '{{ $json.codigo }}' OR producto ILIKE '%{{ $json.producto }}%')\n  AND activo = true\nRETURNING codigo, producto, precio_unitario;\n","options":{"queryReplacement":"={{ $json.precio }}, {{ $json.user_id }}, {{ $json.tenant_id }}, {{ $json.codigo }}, %{{ $json.producto }}%"}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1696,-16],"id":"8ee66867-30c9-477d-a9c0-ee425a5ce89f","name":"crea_o_actualiza_productos","credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"workflowId":{"__rl":true,"value":"niw7nbWmuCLHmO5F","mode":"list","cachedResultUrl":"/workflow/niw7nbWmuCLHmO5F","cachedResultName":"identificar_tenant"},"workflowInputs":{"mappingMode":"defineBelow","value":{}},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.3,"position":[96,0],"id":"7b7cea20-6cb3-45ab-8a11-25339e1a1340","name":"Call 'identificar_tenant'"},{"parameters":{"jsCode":"return {\n  mensaje: \"❌ No tienes permiso para modificar precios\"\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[544,80],"id":"22ff555c-e8a1-4282-893a-5504649df89a","name":"Sin Permiso"},{"parameters":{"workflowInputs":{"values":[{"name":"tenant_id"},{"name":"user_id"},{"name":"permisos"},{"name":"rol"},{"name":"nombre_usuario"},{"name":"mensaje"},{"name":"numero_telefono"},{"name":"date_time"},{"name":"instancia"},{"name":"autorizado"}]}},"id":"c5cab718-4bdb-4b54-a462-2a1c09cd90d1","typeVersion":1.1,"name":"When Executed by Another Workflow","type":"n8n-nodes-base.executeWorkflowTrigger","position":[-112,0]},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"c7c1220d-2445-4d2e-b618-504c8feb2c44","leftValue":"={{ $json.permisos.productos.modificar_precio }}","rightValue":"true","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[320,0],"id":"a7b0be08-95ce-49f5-90ed-9aca5a850ff7","name":"Tiene Permiso?"}],"connections":{"AI Agent":{"main":[[{"node":"Code3","type":"main","index":0}]]},"Google Gemini Chat Model2":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Code3":{"main":[[{"node":"crea_o_actualiza_productos","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Edit Fields1":{"main":[[{"node":"Enviar texto","type":"main","index":0}]]},"crea_o_actualiza_productos":{"main":[[{"node":"Edit Fields1","type":"main","index":0}]]},"Call 'identificar_tenant'":{"main":[[{"node":"Tiene Permiso?","type":"main","index":0}]]},"When Executed by Another Workflow":{"main":[[{"node":"Call 'identificar_tenant'","type":"main","index":0}]]},"Tiene Permiso?":{"main":[[{"node":"Edit Fields","type":"main","index":0}],[{"node":"Sin Permiso","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","timezone":"America/Bogota","callerPolicy":"workflowsFromSameOwner","executionTimeout":15,"availableInMCP":false,"errorWorkflow":"6372jK3MqgOJM8iD"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"When Executed by Another Workflow":[{"json":{"mensaje":"1 \"Coca Cola 350ml\"\n","numero_telefono":"573103015865@s.whatsapp.net","date_time":"11/10/2025","instancia":"pepe cadena"}}]},"versionId":"ed0af99f-66d8-4e20-9562-07fda16b884e","triggerCount":0,"shared":[{"createdAt":"2025-10-07T00:19:11.020Z","updatedAt":"2025-10-07T00:19:11.020Z","role":"workflow:owner","workflowId":"DsmGHHn7nCIHEQYU","projectId":"5qz94e5MiZbyOPrk"}],"tags":[{"createdAt":"2025-10-12T03:56:33.451Z","updatedAt":"2025-10-12T03:56:33.451Z","id":"1HiaED7XPSmwYswE","name":"ventas"}]}