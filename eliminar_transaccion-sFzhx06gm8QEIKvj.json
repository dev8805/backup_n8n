{"createdAt":"2025-10-10T21:54:10.792Z","updatedAt":"2025-10-19T02:53:28.000Z","id":"sFzhx06gm8QEIKvj","name":"eliminar_transaccion","active":false,"isArchived":false,"nodes":[{"parameters":{"modelId":{"__rl":true,"value":"models/gemini-2.0-flash","mode":"list","cachedResultName":"models/gemini-2.0-flash"},"messages":{"values":[{"content":"={{ $json.Mensaje }}"}]},"options":{"systemMessage":"=Eres un asistente que extrae información de mensajes de WhatsApp para procesar reversiones de ventas.\n\nTu tarea es extraer TODOS los IDs de ventas que el usuario quiere revertir.\n\nREGLAS:\n1. Extrae TODOS los números o códigos de venta del mensaje\n2. Los IDs pueden estar separados por comas, espacios, o la palabra \"y\"\n3. Acepta formatos: P001, 123, P050, etc.\n4. Devuelve un array con todos los IDs encontrados\n5. Si no hay IDs, devuelve un array vacío\n\nFORMATO DE RESPUESTA (JSON):\n{\n  \"venta_ids\": [\"ID1\", \"ID2\", \"ID3\"],\n  \"valido\": true/false\n}\n\nEJEMPLOS:\n\nMensaje: \"revertir P268\"\nRespuesta: {\"venta_ids\": [\"P268\"], \"valido\": true}\n\nMensaje: \"revertir P268, P269, P270\"\nRespuesta: {\"venta_ids\": [\"P268\", \"P269\", \"P270\"], \"valido\": true}\n\nMensaje: \"eliminar 268 269 270\"\nRespuesta: {\"venta_ids\": [\"268\", \"269\", \"270\"], \"valido\": true}\n\nMensaje: \"borrar P001 y P002\"\nRespuesta: {\"venta_ids\": [\"P001\", \"P002\"], \"valido\": true}\n\nMensaje: \"cancelar ventas 5, 10, 15\"\nRespuesta: {\"venta_ids\": [\"5\", \"10\", \"15\"], \"valido\": true}\n\nMensaje: \"hola\"\nRespuesta: {\"venta_ids\": [], \"valido\": false}\n\nIMPORTANTE: \n- Responde SOLO con el JSON\n- Siempre devuelve venta_ids como array, aunque sea un solo ID\n- Si hay al menos un ID válido, valido debe ser true"}},"type":"@n8n/n8n-nodes-langchain.googleGemini","typeVersion":1,"position":[432,352],"id":"7d0324ec-256d-4f72-86e1-19a6819ffa7f","name":"Message a model","credentials":{"googlePalmApi":{"id":"2llV2c1H3lSUoFpn","name":"milenaGRATIS"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"bd17279e-655a-43d7-bcdd-ba3e4824eedf","leftValue":"={{ $json.valido }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[1008,352],"id":"34c70098-001e-4eb6-9652-50241481fe5a","name":"If"},{"parameters":{"jsCode":"// Obtener la respuesta de Gemini\nconst geminiResponse = $input.first().json;\n\n// Extraer el texto de la respuesta\nconst textResponse = geminiResponse.content?.parts?.[0]?.text || '';\n\n// Limpiar los bloques de código markdown (```json ... ```)\nconst jsonText = textResponse\n  .replace(/```json\\n/g, '')\n  .replace(/```/g, '')\n  .trim();\n\n// Parsear el JSON\nlet parsedData;\ntry {\n  parsedData = JSON.parse(jsonText);\n  \n  // Formatear los IDs: agregar P si no lo tienen y hacer padding\n  if (parsedData.venta_ids && Array.isArray(parsedData.venta_ids)) {\n    parsedData.venta_ids = parsedData.venta_ids.map(id => {\n      const ventaId = id.toString().trim();\n      \n      // Si es solo número, agregar P y padding\n      if (/^\\d+$/.test(ventaId)) {\n        return 'P' + ventaId.padStart(3, '0');\n      }\n      // Si ya tiene P, asegurar el formato correcto\n      else if (/^P\\d+$/i.test(ventaId)) {\n        const numero = ventaId.substring(1);\n        return 'P' + numero.padStart(3, '0');\n      }\n      // Si tiene otro formato, devolver tal cual\n      return ventaId;\n    });\n    \n    // Validar que haya al menos un ID\n    parsedData.valido = parsedData.venta_ids.length > 0;\n  } else {\n    parsedData.valido = false;\n    parsedData.venta_ids = [];\n  }\n  \n} catch (error) {\n  parsedData = {\n    venta_ids: [],\n    valido: false,\n    error: 'No se pudo parsear la respuesta'\n  };\n}\n\nreturn {\n  json: parsedData\n};"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[784,352],"id":"f5c04d2b-6ea5-45df-b04f-23a0dee8e419","name":"parsea"},{"parameters":{"operation":"executeQuery","query":"SELECT \n  venta_id,\n  codigo,\n  items,\n  total\nFROM ventas \nWHERE tenant_id = '{{ $('Guardar tenant').item.json.tenant_id }}'\n  AND codigo = '{{ $json.venta_id }}'\n  AND activo = true\nLIMIT 1;\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[2048,80],"id":"2589e5fe-e6b5-4e85-a612-4f48f4c9ed25","name":"Buscar ventas","credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"respondWith":"json","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.4,"position":[1008,592],"id":"ff3977d9-524a-4b3e-8f7e-25bd0177342d","name":"Respond to Webhook"},{"parameters":{"jsCode":"// Obtener el array de venta_ids\nconst ventaIds = $input.first().json.venta_ids || [];\n\n// Convertir cada ID en un item separado\nreturn ventaIds.map(id => ({\n  json: {\n    venta_id: id\n  }\n}));"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1248,336],"id":"956dddf9-3063-44a4-a9f3-8e46f01cbe98","name":"Convertir IDs a items"},{"parameters":{"options":{"reset":false}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[1792,64],"id":"fa3cc772-d7e9-4981-a40c-d18f34dc6bc5","name":"loop ventas"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"1f40b8ea-1033-40d5-8111-43d4a0e555d7","leftValue":"={{ $json.codigo_venta }}","rightValue":"","operator":{"type":"string","operation":"notEmpty","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[2256,80],"id":"47dac8a5-6431-43ed-9723-6712d849bdeb","name":"¿venta existe?"},{"parameters":{"operation":"executeQuery","query":"-- Marcar venta como eliminada\nUPDATE ventas\nSET \n  activo = false,\n  deleted_at = NOW(),\n  deleted_by = '{{ $('Guardar tenant').item.json.user_id }}'\nWHERE tenant_id = '{{ $('Guardar tenant').item.json.tenant_id }}'\n  AND codigo = '{{ $json.codigo }}'\nRETURNING codigo, items, total;\n","options":{"queryBatching":"transaction"}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[2464,64],"id":"60f6e366-59de-48db-9aa3-51a965faaa39","name":"Revertir Venta","alwaysOutputData":true,"credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.venta_id }}","rightValue":"P","operator":{"type":"string","operation":"startsWith"},"id":"d2e6bb75-0220-4011-8259-c27d8dfaa72e"}],"combinator":"and"},"renameOutput":true,"outputKey":"eliminar venta"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"d1b9c44a-6d53-484a-8f09-bfa5978a3d93","leftValue":"={{ $json.venta_id }}","rightValue":"L","operator":{"type":"string","operation":"startsWith"}}],"combinator":"and"},"renameOutput":true,"outputKey":"eliminar consumo"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"28464b47-c3b2-4286-b613-2baf1079b4f1","leftValue":"={{ $json.venta_id }}","rightValue":"A","operator":{"type":"string","operation":"startsWith"}}],"combinator":"and"},"renameOutput":true,"outputKey":"Eliminar entrada"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.3,"position":[1456,336],"id":"ba8c94c8-4f97-4ea8-a5b8-355101f770a7","name":"Switch"},{"parameters":{"options":{"reset":false}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[1792,352],"id":"1ee44559-ece4-4323-8546-56c495fb27f0","name":"loop ventas1"},{"parameters":{"operation":"executeQuery","query":"SELECT \n  movimiento_id,\n  codigo,\n  producto,\n  cantidad\nFROM movimientos_inventario\nWHERE tenant_id = '{{ $('Guardar tenant').item.json.tenant_id }}'\n  AND codigo = '{{ $json.venta_id }}'\n  AND tipo = 'consumo'\n  AND activo = true\nLIMIT 1;\n\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[2016,368],"id":"4e6c8393-aeef-489f-bb24-7e76b47541b9","name":"Buscar consumos","credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"1f40b8ea-1033-40d5-8111-43d4a0e555d7","leftValue":"={{ $json.codigo_consumo }}","rightValue":"","operator":{"type":"string","operation":"notEmpty","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[2208,368],"id":"ca196ddf-fa50-4a67-8cb3-446a2755d5c0","name":"¿consumo existe?"},{"parameters":{"operation":"executeQuery","query":"UPDATE movimientos_inventario\nSET \n  activo = false,\n  deleted_at = NOW()\nWHERE tenant_id = '{{ $('Guardar tenant').item.json.tenant_id }}'\n  AND codigo = '{{ $json.codigo }}'\nRETURNING codigo, producto, ABS(cantidad) as cantidad;\n","options":{"queryBatching":"transaction"}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[2448,352],"id":"153efa11-70c4-43b8-aae7-0fa6c2d7c24b","name":"Revertir consumo","alwaysOutputData":true,"credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"resource":"messages-api","instanceName":"={{ $('When Executed by Another Workflow').first().json.instancia }}","remoteJid":"={{ $('When Executed by Another Workflow').first().json.telefono }}","messageText":"={{ $json.mensaje }}","options_message":{}},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[3728,352],"id":"b27acd4b-1b9e-41ac-a304-7d4510f4ac18","name":"Enviar texto2","credentials":{"evolutionApi":{"id":"KDzQAvjURY1uhhvT","name":"Evolution account"}}},{"parameters":{"options":{"reset":false}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[1792,672],"id":"6d54b9d6-5feb-406e-b1b0-a06a51289b99","name":"loop ventas2"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"1f40b8ea-1033-40d5-8111-43d4a0e555d7","leftValue":"={{ $json.codigo_entrada }}","rightValue":"","operator":{"type":"string","operation":"notEmpty","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[2208,688],"id":"59f85d82-9296-425b-889b-d255ea8a31f3","name":"¿entrada existe?"},{"parameters":{"operation":"executeQuery","query":"UPDATE movimientos_inventario\nSET \n  activo = false,\n  deleted_at = NOW()\nWHERE tenant_id = '{{ $('Guardar tenant').item.json.tenant_id }}'\n  AND codigo = '{{ $json.codigo }}'\nRETURNING codigo, producto, cantidad;\n","options":{"queryBatching":"transaction"}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[2448,672],"id":"4a45f375-49dd-459c-9666-eb34958ea866","name":"Rvertir entrada","alwaysOutputData":true,"credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"SELECT \n  movimiento_id,\n  codigo,\n  producto,\n  cantidad\nFROM movimientos_inventario\nWHERE tenant_id = '{{ $('Guardar tenant').item.json.tenant_id }}'\n  AND codigo = '{{ $json.venta_id }}'\n  AND tipo = 'entrada'\n  AND activo = true\nLIMIT 1;\n\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[2016,688],"id":"b0fa2d66-5b7d-47fc-b5aa-751c132bcf03","name":"Buscar entradas","credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"workflowInputs":{"values":[{"name":"tenant_id"},{"name":"user_id"},{"name":"permisos"},{"name":"rol"},{"name":"nombre_usuario"},{"name":"mensaje"},{"name":"numero_telefono"},{"name":"date_time"},{"name":"instancia"},{"name":"autorizado"}]}},"id":"b541244c-4079-425c-9fed-4d360215ceb3","typeVersion":1.1,"name":"When Executed by Another Workflow","type":"n8n-nodes-base.executeWorkflowTrigger","position":[-736,352]},{"parameters":{"jsCode":"// Verificar si viene pre-autorizado desde gerson_ventas\nif ($json.autorizado === true && $json.tenant_id) {\n  // Parsear permisos si vienen como string\n  let permisos = $json.permisos;\n  if (typeof permisos === 'string') {\n    permisos = JSON.parse(permisos);\n  }\n  \n  return {\n    tenant_id: $json.tenant_id,\n    user_id: $json.user_id,\n    rol: $json.rol,\n    permisos: permisos,\n    nombre_usuario: $json.nombre_usuario,\n    mensaje: $json.mensaje,\n    numero_telefono: $json.numero_telefono,\n    date_time: $json.date_time,\n    instancia: $json.instancia,\n    pre_validado: true\n  };\n} else {\n  // Llamada directa (testing sin gerson_ventas)\n  return {\n    necesita_validacion: true,\n    mensaje: $json.mensaje,\n    numero_telefono: $json.numero_telefono,\n    date_time: $json.date_time,\n    instancia: $json.instancia\n  };\n}\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-528,352],"id":"1fb3902c-2a6d-4aa9-a532-7118d1056844","name":"Verificar Autorización"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"64263bb7-218a-4965-94ae-f56eba7a053d","leftValue":"={{ $json.necesita_validacion }}","rightValue":"true","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-320,352],"id":"c149106e-18f5-4c10-a27e-250afe6dca0b","name":"Necesita Validación?"},{"parameters":{"workflowId":{"__rl":true,"value":"niw7nbWmuCLHmO5F","mode":"list","cachedResultUrl":"/workflow/niw7nbWmuCLHmO5F","cachedResultName":"identificar_tenant"},"workflowInputs":{"mappingMode":"defineBelow","value":{}},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.3,"position":[-144,144],"id":"6c08aa62-0d92-4be0-8915-af0549f2fc02","name":"Call 'identificar_tenant'"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"940d13a5-4dcf-4eac-9587-0bfe0cdf16ec","leftValue":"={{ $json.permisos.ventas.eliminar }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[128,352],"id":"d25bc9db-17c9-4b75-a7e2-af5766c2fdcc","name":"Permiso Eliminar"},{"parameters":{"jsCode":"return {\n  mensaje: `❌ ${$json.nombre_usuario || 'Usuario'}, no tienes permiso para eliminar transacciones.`\n};"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[240,592],"id":"908a39d1-2ff6-42cb-9465-e1b0bf420f4a","name":"sin permiso"},{"parameters":{"jsCode":"let datos;\n\nif ($json.pre_validado === true) {\n  datos = $json;\n} else {\n  datos = $json;\n}\n\nreturn {\n  tenant_id: datos.tenant_id,\n  user_id: datos.user_id,\n  permisos: datos.permisos,\n  rol: datos.rol,\n  nombre_usuario: datos.nombre_usuario\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-128,368],"id":"3181c606-b345-430f-98f2-965bc897d60f","name":"Guardar tenant"},{"parameters":{"jsCode":"// Parsear items de la venta\nconst items = JSON.parse($json.items);\n\nreturn items.map(item => ({\n  codigo_venta: $json.codigo,\n  producto: item.PRODUCTO,\n  cantidad: item.CANTIDAD\n}));"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2688,64],"id":"7b3755a9-2552-4dd4-b145-139cf06111a6","name":"Extraer items"},{"parameters":{"operation":"executeQuery","query":"UPDATE inventario\nSET \n  cantidad = cantidad + {{ $json.cantidad }},\n  updated_at = NOW(),\n  updated_by = '{{ $('Guardar tenant').item.json.user_id }}'\nWHERE tenant_id = '{{ $('Guardar tenant').item.json.tenant_id }}'\n  AND producto = '{{ $json.producto }}'\nRETURNING producto, cantidad as nuevo_stock;\n\n","options":{"queryBatching":"transaction"}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[2896,64],"id":"6ce0eaf3-8305-4373-9b18-58a9d3fedc92","name":"Actualizar inventario venta","alwaysOutputData":true,"credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"UPDATE inventario\nSET \n  cantidad = cantidad + ABS({{ $json.cantidad }}),\n  updated_at = NOW(),\n  updated_by = '{{ $('Guardar tenant').item.json.user_id }}'\nWHERE tenant_id = '{{ $('Guardar tenant').item.json.tenant_id }}'\n  AND producto = '{{ $json.producto }}'\nRETURNING producto, cantidad as nuevo_stock;\n","options":{"queryBatching":"transaction"}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[2656,352],"id":"fcd96cec-07d5-4d69-884b-0e67b6e5cc0f","name":"Actualizar inventario consumo","alwaysOutputData":true,"credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"UPDATE inventario\nSET \n  cantidad = cantidad - {{ $json.cantidad }},\n  updated_at = NOW(),\n  updated_by = '{{ $('Guardar tenant').item.json.user_id }}'\nWHERE tenant_id = '{{ $('Guardar tenant').item.json.tenant_id }}'\n  AND producto = '{{ $json.producto }}'\nRETURNING producto, cantidad as nuevo_stock;\n","options":{"queryBatching":"transaction"}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[2640,672],"id":"6381c2f6-22bc-4cfd-8bda-b41656ea6120","name":"Actualizar inventario entrada","alwaysOutputData":true,"credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"mode":"combine","combineBy":"combineByPosition","numberInputs":3,"options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[3232,352],"id":"a8ac4880-fc20-4e2b-ab9d-27f670f0f7cf","name":"Merge"},{"parameters":{"jsCode":"const items = $input.all();\nconst tipo = items[0].json.codigo_venta ? 'venta' : \n             items[0].json.tipo === 'consumo' ? 'consumo' : 'entrada';\n\nlet mensaje = `✅ Transacción eliminada exitosamente\\n\\n`;\nmensaje += `📦 Inventario actualizado:\\n`;\n\nitems.forEach(item => {\n  mensaje += `• ${item.json.producto}: ${item.json.nuevo_stock} unidades\\n`;\n});\n\nreturn {\n  mensaje: mensaje.trim(),\n  phone: $('Webhook').item.json.from\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[3440,368],"id":"d623fca7-7a26-49da-8584-a8b1dc2e558e","name":"Formatear mensaje confirmación"}],"connections":{"Message a model":{"main":[[{"node":"parsea","type":"main","index":0}]]},"parsea":{"main":[[{"node":"If","type":"main","index":0}]]},"If":{"main":[[{"node":"Convertir IDs a items","type":"main","index":0}],[{"node":"Respond to Webhook","type":"main","index":0}]]},"Buscar ventas":{"main":[[{"node":"¿venta existe?","type":"main","index":0}]]},"Convertir IDs a items":{"main":[[{"node":"Switch","type":"main","index":0}]]},"loop ventas":{"main":[[],[{"node":"Buscar ventas","type":"main","index":0}]]},"¿venta existe?":{"main":[[{"node":"Revertir Venta","type":"main","index":0}],[{"node":"loop ventas","type":"main","index":0}]]},"Revertir Venta":{"main":[[{"node":"Extraer items","type":"main","index":0}]]},"Switch":{"main":[[{"node":"loop ventas","type":"main","index":0}],[{"node":"loop ventas1","type":"main","index":0}],[{"node":"loop ventas2","type":"main","index":0}]]},"loop ventas1":{"main":[[],[{"node":"Buscar consumos","type":"main","index":0}]]},"Buscar consumos":{"main":[[{"node":"¿consumo existe?","type":"main","index":0}]]},"¿consumo existe?":{"main":[[{"node":"Revertir consumo","type":"main","index":0}],[{"node":"loop ventas1","type":"main","index":0}]]},"Revertir consumo":{"main":[[{"node":"Actualizar inventario consumo","type":"main","index":0}]]},"loop ventas2":{"main":[[],[{"node":"Buscar entradas","type":"main","index":0}]]},"¿entrada existe?":{"main":[[{"node":"Rvertir entrada","type":"main","index":0}],[{"node":"loop ventas2","type":"main","index":0}]]},"Rvertir entrada":{"main":[[{"node":"Actualizar inventario entrada","type":"main","index":0}]]},"Buscar entradas":{"main":[[{"node":"¿entrada existe?","type":"main","index":0}]]},"When Executed by Another Workflow":{"main":[[{"node":"Verificar Autorización","type":"main","index":0}]]},"Verificar Autorización":{"main":[[{"node":"Necesita Validación?","type":"main","index":0}]]},"Necesita Validación?":{"main":[[{"node":"Call 'identificar_tenant'","type":"main","index":0}],[{"node":"Guardar tenant","type":"main","index":0}]]},"Permiso Eliminar":{"main":[[{"node":"Message a model","type":"main","index":0}],[{"node":"sin permiso","type":"main","index":0}]]},"Guardar tenant":{"main":[[{"node":"Permiso Eliminar","type":"main","index":0}]]},"Extraer items":{"main":[[{"node":"Actualizar inventario venta","type":"main","index":0}]]},"Actualizar inventario venta":{"main":[[{"node":"Merge","type":"main","index":0},{"node":"loop ventas","type":"main","index":0}]]},"Actualizar inventario consumo":{"main":[[{"node":"Merge","type":"main","index":1},{"node":"loop ventas1","type":"main","index":0}]]},"Actualizar inventario entrada":{"main":[[{"node":"Merge","type":"main","index":2},{"node":"loop ventas2","type":"main","index":0}]]},"Merge":{"main":[[{"node":"Formatear mensaje confirmación","type":"main","index":0}]]},"Formatear mensaje confirmación":{"main":[[{"node":"Enviar texto2","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"¿venta existe?":[{"json":{"codigo_venta":"P012","producto":"Coca cola MEGA","cantidad":1,"valor_unitario":"7500.00","valor_total":"7500.00","costo":null,"sessionid":null,"fecha":"2025-10-11T05:00:00.000Z"}}],"When Executed by Another Workflow":[{"json":{"mensaje":"1 \"Coca Cola 350ml\"\n","numero_telefono":"573103015865@s.whatsapp.net","date_time":"11/10/2025","instancia":"pepe cadena"}}]},"versionId":"cb3c8889-4cc1-4a53-9a95-66c13f36599e","triggerCount":0,"shared":[{"createdAt":"2025-10-10T21:54:10.806Z","updatedAt":"2025-10-10T21:54:10.806Z","role":"workflow:owner","workflowId":"sFzhx06gm8QEIKvj","projectId":"5qz94e5MiZbyOPrk"}],"tags":[{"createdAt":"2025-10-12T03:56:33.451Z","updatedAt":"2025-10-12T03:56:33.451Z","id":"1HiaED7XPSmwYswE","name":"ventas"}]}