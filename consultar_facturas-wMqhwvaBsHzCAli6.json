{"createdAt":"2025-10-17T23:24:04.662Z","updatedAt":"2025-10-18T00:06:25.000Z","id":"wMqhwvaBsHzCAli6","name":"consultar_facturas","active":false,"isArchived":false,"nodes":[{"parameters":{"modelId":{"__rl":true,"value":"models/gemini-2.5-flash","mode":"list","cachedResultName":"models/gemini-2.5-flash"},"messages":{"values":[{"content":"={{ $json.mensaje }}"}]},"options":{"systemMessage":"=Eres un asistente que analiza consultas de facturas y extrae información estructurada.\n\nEl usuario hará consultas como:\n- \"facturas de hoy\"\n- \"facturas de octubre\"\n- \"cuánto gasté esta semana\"\n- \"buscar facturas de Distribuidora La Economia\"\n- \"facturas con Coca Cola\"\n- \"factura número 85024\"\n\nFECHA ACTUAL: {{ $json.fecha }}\n\nTu trabajo es analizar el mensaje y devolver un JSON con esta estructura:\n\n{\n  \"tipo\": \"periodo|proveedor|producto|numero|total\",\n  \"parametros\": {\n    \"fecha_inicio\": \"YYYY-MM-DD\",\n    \"fecha_fin\": \"YYYY-MM-DD\",\n    \"proveedor\": \"nombre del proveedor\",\n    \"producto\": \"nombre del producto\",\n    \"numero_factura\": \"número\"\n  }\n}\n\nTIPOS DE CONSULTA:\n- \"periodo\": facturas en un rango de fechas (hoy, esta semana, este mes, octubre, etc.)\n- \"proveedor\": buscar por nombre de proveedor\n- \"producto\": buscar facturas que contengan un producto\n- \"numero\": buscar factura específica por número\n- \"total\": calcular total gastado en un periodo\n\nREGLAS:\n- Si dice \"hoy\", fecha_inicio y fecha_fin = fecha actual\n- Si dice \"esta semana\", calcular inicio (lunes) y fin (domingo) de la semana actual\n- Si dice \"este mes\" o \"octubre\", calcular inicio y fin del mes\n- Si menciona un nombre de empresa, es tipo \"proveedor\"\n- Si menciona un producto, es tipo \"producto\"\n- Si menciona un número de factura, es tipo \"numero\"\n- Si pregunta por totales/gastos, es tipo \"total\" (y extraer el periodo)\n\nRESPONDE SOLO CON EL JSON, SIN TEXTO ADICIONAL."}},"type":"@n8n/n8n-nodes-langchain.googleGemini","typeVersion":1,"position":[-96,336],"id":"dc39d2da-b321-4c9f-8247-956e6dc9cdfc","name":"Message a model","credentials":{"googlePalmApi":{"id":"2llV2c1H3lSUoFpn","name":"milenaGRATIS"}}},{"parameters":{"jsCode":"// Obtener la respuesta del modelo\nconst respuesta = \n$input.first().json.content.parts[0].text\n// Limpiar posibles marcas de código markdown\nlet jsonLimpio = respuesta.replace(/```json\\n?/g, '').replace(/```\\n?/g, '').trim();\n\n// Parsear el JSON\nlet analisis;\ntry {\n  analisis = JSON.parse(jsonLimpio);\n} catch (e) {\n  // Si falla el parseo, devolver estructura por defecto\n  analisis = {\n    tipo: \"error\",\n    parametros: {},\n    error: \"No se pudo analizar el mensaje\"\n  };\n}\n\n// Agregar datos del webhook original\nreturn {\n  json: {\n    tipo: analisis.tipo,\n    parametros: analisis.parametros,\n    instancia: $('Webhook').first().json.instancia,\n    telefono: $('Webhook').first().json.telefono,\n    mensaje_original: $('Webhook').first().json.mensaje\n  }\n};"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[224,336],"id":"36df6898-0a56-4e3d-9bd2-e0a5fbc4af8f","name":"Code in JavaScript"},{"parameters":{"workflowInputs":{"values":[{"name":"mensaje"},{"name":"instancia"},{"name":"telefono"},{"name":"fecha"}]}},"id":"c055762a-8fe7-4141-a639-df2372f30060","typeVersion":1.1,"name":"Webhook","type":"n8n-nodes-base.executeWorkflowTrigger","position":[-368,336]},{"parameters":{"operation":"executeQuery","query":"={{ $json.sql }}","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[640,336],"id":"a4948607-b30d-4852-bdd4-eaa92a3c11b8","name":"Execute a SQL query","credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"jsCode":"// Obtener datos\nconst facturas = $input.all();\nconst tipo = $('Code1').first().json.tipo; // El Code que construyó el SQL\nconst params = $('Code1').first().json.parametros;\n\n// Si no hay resultados\nif (facturas.length === 0) {\n  return {\n    json: {\n      mensaje: \"❌ No encontré facturas con esos criterios de búsqueda.\"\n    }\n  };\n}\n\n// Formatear según el tipo de consulta\nlet mensaje = \"\";\n\nif (tipo === 'total') {\n  // Para consultas de total, mostrar resumen\n  const totalGastado = facturas.reduce((sum, f) => sum + parseFloat(f.json.total), 0);\n  const numFacturas = facturas.length;\n  \n  mensaje = `💰 *Resumen de Gastos*\\n\\n`;\n  mensaje += `📊 Total gastado: $${totalGastado.toLocaleString('es-CO')}\\n`;\n  mensaje += `📄 Número de facturas: ${numFacturas}\\n`;\n  \n} else {\n  // Para otras consultas, mostrar lista de facturas\n  mensaje = `📊 *Encontré ${facturas.length} factura(s)*\\n\\n`;\n  \n  facturas.forEach((item, index) => {\n    const f = item.json;\n    const fecha = new Date(f.fecha_emision).toLocaleDateString('es-CO');\n    \n    mensaje += `${index + 1}️⃣ *Factura #${f.numero_factura}*\\n`;\n    mensaje += `   📅 Fecha: ${fecha}\\n`;\n    mensaje += `   🏢 Proveedor: ${f.proveedor}\\n`;\n    mensaje += `   💵 Total: $${parseFloat(f.total).toLocaleString('es-CO')}\\n`;\n    \n    // Mostrar productos si hay\n    if (Array.isArray(f.productos)) {\n      mensaje += `   📦 Productos: ${f.productos.length}\\n`;\n    }\n    \n    mensaje += `   🔗 ${f.imagen_url}\\n\\n`;\n  });\n  \n  // Agregar total al final\n  const totalGeneral = facturas.reduce((sum, f) => sum + parseFloat(f.json.total), 0);\n  mensaje += `💰 *Total: $${totalGeneral.toLocaleString('es-CO')}*`;\n}\n\nreturn {\n  json: {\n    mensaje: mensaje,\n    num_resultados: facturas.length,\n    telefono: $('Code1').first().json.telefono,\n    instancia: $('Code1').first().json.instancia\n  }\n};"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[848,336],"id":"196ed8c9-025f-4621-9359-78f4b6106058","name":"Code in JavaScript2"},{"parameters":{"jsCode":"// Obtener datos\nconst tipo = $json.tipo;\nconst params = $json.parametros;\nconst instancia = $json.instancia;\n\n// Construir la consulta SQL base\nlet sql = `SELECT * FROM compras WHERE instancia = '${instancia}'`;\nlet conditions = [];\n\n// Agregar filtros según parámetros disponibles\n\n// Filtro de fechas (cambiado a fecha_registro)\nif (params.fecha_inicio && params.fecha_fin) {\n  conditions.push(`fecha_registro::date BETWEEN '${params.fecha_inicio}' AND '${params.fecha_fin}'`);\n} else if (params.fecha_inicio) {\n  conditions.push(`fecha_registro::date = '${params.fecha_inicio}'`);\n}\n\n// Filtro de proveedor\nif (params.proveedor) {\n  conditions.push(`proveedor ILIKE '%${params.proveedor}%'`);\n}\n\n// Filtro de producto\nif (params.producto) {\n  conditions.push(`productos::text ILIKE '%${params.producto}%'`);\n}\n\n// Filtro de número de factura\nif (params.numero_factura) {\n  conditions.push(`numero_factura = '${params.numero_factura}'`);\n}\n\n// Unir todas las condiciones\nif (conditions.length > 0) {\n  sql += ' AND ' + conditions.join(' AND ');\n}\n\n// Ordenar por fecha_registro descendente\nsql += ' ORDER BY fecha_registro DESC, created_at DESC';\n\n// Si es tipo \"total\", modificar para calcular suma\nlet sqlTotal = null;\nif (tipo === 'total') {\n  sqlTotal = sql.replace('SELECT *', 'SELECT SUM(total) as total_gastado, COUNT(*) as num_facturas');\n}\n\nreturn {\n  json: {\n    sql: sql,\n    sql_total: sqlTotal,\n    tipo: tipo,\n    instancia: instancia,\n    telefono: $json.telefono,\n    mensaje_original: $json.mensaje_original,\n    parametros: params\n  }\n};"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[432,336],"id":"e9c4297d-ea6c-4be9-b35e-7951641cfbb3","name":"Code1"},{"parameters":{"resource":"messages-api","instanceName":"={{ $json.instancia }}","remoteJid":"={{ $json.telefono }}","messageText":"={{ $json.mensaje }}","options_message":{}},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[1056,336],"id":"85015d7c-34b8-4f19-9877-8847b845c44a","name":"Enviar texto","credentials":{"evolutionApi":{"id":"KDzQAvjURY1uhhvT","name":"Evolution account"}}}],"connections":{"Message a model":{"main":[[{"node":"Code in JavaScript","type":"main","index":0}]]},"Webhook":{"main":[[{"node":"Message a model","type":"main","index":0}]]},"Code in JavaScript":{"main":[[{"node":"Code1","type":"main","index":0}]]},"Execute a SQL query":{"main":[[{"node":"Code in JavaScript2","type":"main","index":0}]]},"Code1":{"main":[[{"node":"Execute a SQL query","type":"main","index":0}]]},"Code in JavaScript2":{"main":[[{"node":"Enviar texto","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Webhook":[{"json":{"mensaje":"facturas de hoy","instancia":"pepe cadena","telefono":"573103015865@s.whatsapp.net","fecha":"17/10/2025"}}]},"versionId":"bf09b94d-1f1d-43a8-a8c2-6782eb6d9277","triggerCount":0,"shared":[{"createdAt":"2025-10-17T23:24:04.673Z","updatedAt":"2025-10-17T23:24:04.673Z","role":"workflow:owner","workflowId":"wMqhwvaBsHzCAli6","projectId":"5qz94e5MiZbyOPrk"}],"tags":[]}