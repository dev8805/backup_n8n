{"createdAt":"2025-10-06T05:13:20.455Z","updatedAt":"2025-10-21T05:28:14.000Z","id":"ubS47RpCUfaTu9C9","name":"crear_producto","active":true,"isArchived":false,"nodes":[{"parameters":{"resource":"messages-api","instanceName":"={{ $('Validar token').first().json.instancia_evolution }}","remoteJid":"={{ $('Validar token').first().json.telefono_whatsapp }}","messageText":"={{ $json.mensaje }}","options_message":{}},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[1632,112],"id":"eb89d716-4719-40b9-8da5-20bb4999a1f8","name":"Enviar texto","credentials":{"evolutionApi":{"id":"KDzQAvjURY1uhhvT","name":"Evolution account"}}},{"parameters":{"operation":"executeQuery","query":"SELECT \n  ft.tenant_id,\n  ft.user_id,\n  ft.usos,\n  ft.expires_at,\n  tu.nombre as nombre_usuario,\n  tu.telefono_whatsapp,\n  tu.instancia_evolution,\n  t.nombre_negocio,\n  tu.rol\nFROM form_tokens ft\nJOIN tenant_users tu ON ft.user_id = tu.user_id\nJOIN tenants t ON ft.tenant_id = t.tenant_id\nWHERE ft.token = '{{ $json.token }}'::uuid\n  AND ft.expires_at > NOW()\nLIMIT 1;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-496,208],"id":"673ebfd9-e547-4405-8c9a-3640915ffb9f","name":"Validar token","credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"resource":"messages-api","instanceName":"pepe cadena","remoteJid":"={{ $json['teléfono'] }}","messageText":"=El enlace expiró (24 horas). Solicita uno nuevo escribiendo 'crear producto' por WhatsApp","options_message":{}},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[496,352],"id":"8a1e3766-a87f-489a-a425-95c2f5473ead","name":"linkExpirado","credentials":{"evolutionApi":{"id":"KDzQAvjURY1uhhvT","name":"Evolution account"}}},{"parameters":{"formTitle":"Crear Producto Nuevo","formFields":{"values":[{"fieldLabel":"Nombre del producto","placeholder":"Ejemplo: Coca cola 350ml","requiredField":true},{"fieldLabel":"Unidad de medida","fieldType":"checkbox","fieldOptions":{"values":[{"option":"CAJAS"},{"option":"PACAS"},{"option":"UNIDADES"},{"option":"PAQUETES"},{"option":"BOLSAS"}]},"requiredField":true},{"fieldLabel":"Cuantas unidades vienen en la CAJA, PACA, BOLSA etc","fieldType":"number","placeholder":"Ejemplo: 30","requiredField":true},{"fieldLabel":"Stock actual","fieldType":"number","placeholder":"Ejemplo: 40","requiredField":true},{"fieldLabel":"apodos (SEPARADOS POR COMAS)","fieldType":"textarea","placeholder":"Ejemplo: coca cola 350, coca cola personal,","requiredField":true},{"fieldLabel":"Precio Unitario","fieldType":"number","placeholder":"3000","requiredField":true},{"fieldLabel":"Costo por unidad","fieldType":"number","placeholder":"2000","requiredField":true}]},"options":{"appendAttribution":false,"buttonLabel":"Crear Producto","customCss":":root {\n    --font-family: 'Open Sans', sans-serif;\n    --font-weight-normal: 400;\n    --font-weight-bold: 600;\n    --font-size-body: 12px;\n    --font-size-label: 14px;\n    --font-size-test-notice: 12px;\n    --font-size-input: 14px;\n    --font-size-header: 20px;\n    --font-size-paragraph: 14px;\n    --font-size-link: 12px;\n    --font-size-error: 12px;\n    --font-size-html-h1: 28px;\n    --font-size-html-h2: 20px;\n    --font-size-html-h3: 16px;\n    --font-size-html-h4: 14px;\n    --font-size-html-h5: 12px;\n    --font-size-html-h6: 10px;\n    --font-size-subheader: 14px;\n    /* Colors */\n    --color-background: \n#fbfcfe;\n    --color-test-notice-text: \n#e6a23d;\n    --color-test-notice-bg: \n#fefaf6;\n    --color-test-notice-border: \n#f6dcb7;\n    --color-card-bg: \n#ffffff;\n    --color-card-border: \n#dbdfe7;\n    --color-card-shadow: rgba(99, 77, 255, 0.06);\n    --color-link: \n#7e8186;\n    --color-header: \n#525356;\n    --color-label: \n#555555;\n    --color-input-border: \n#dbdfe7;\n    --color-input-text: \n#71747A;\n    --color-focus-border: rgb(90, 76, 194);\n    --color-submit-btn-bg: \n#ff6d5a;\n    --color-submit-btn-text: \n#ffffff;\n    --color-error: \n#ea1f30;\n    --color-required: \n#ff6d5a;\n    --color-clear-button-bg: \n#7e8186;\n    --color-html-text: #555;\n    --color-html-link: \n#ff6d5a;\n    --color-header-subtext: \n#7e8186;\n    /* Border Radii */\n    --border-radius-card: 8px;\n    --border-radius-input: 6px;\n    --border-radius-clear-btn: 50%;\n    --card-border-radius: 8px;\n    /* Spacing */\n    --padding-container-top: 24px;\n    --padding-card: 24px;\n    --padding-test-notice-vertical: 12px;\n    --padding-test-notice-horizontal: 24px;\n    --margin-bottom-card: 16px;\n    --padding-form-input: 12px;\n    --card-padding: 24px;\n    --card-margin-bottom: 16px;\n    /* Dimensions */\n    --container-width: 448px;\n    --submit-btn-height: 48px;\n    --checkbox-size: 18px;\n    /* Others */\n    --box-shadow-card: 0px 4px 16px 0px var(--color-card-shadow);\n    --opacity-placeholder: 0.5;\n}"}},"type":"n8n-nodes-base.formTrigger","typeVersion":2.3,"position":[-976,208],"id":"e22ff67d-0af3-483a-9e86-c866bf870b9d","name":"Webhook","webhookId":"5d478c1f-757d-4152-bc9c-2f9f629e792d"},{"parameters":{"operation":"executeQuery","query":"INSERT INTO inventario (\n  tenant_id,\n  producto,\n  cantidad,\n  unidad,\n  updated_by\n) VALUES (\n  '{{ $('Validar token').item.json.tenant_id }}',\n  '{{ $json.producto }}',\n  {{ $('datos_mapeados').item.json.stock }},\n  '{{ $('datos_mapeados').item.json.unidad }}',\n  '{{ $('Validar token').item.json.user_id }}'\n)\nRETURNING *;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[448,112],"id":"708214f8-a52a-4868-9ed2-6bc7e32642c2","name":"Insertar inventario inicial","credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"jsCode":"// Obtener los apodos del input actual\nconst apodosInput = $input.first().json.apodos;\n\n// Obtener el producto insertado del nodo anterior\nconst productoInsertado = $('Insertar Producto').first().json;\n\n// Si no hay apodos, retornar vacío\nif (!apodosInput || apodosInput.trim() === '') {\n  return [];\n}\n\n// Procesar apodos (separar por comas y limpiar)\nconst apodos = apodosInput\n  .split(',')\n  .map(a => a.trim())\n  .filter(a => a !== '');\n\n// Crear un objeto por cada apodo para insertar en la tabla\nreturn apodos.map(apodo => ({\n  tenant_id: productoInsertado.tenant_id || $('Insertar Producto').first().json.tenant_id,\n  producto_id: productoInsertado.producto_id,\n  apodo: apodo.toLowerCase()\n}));\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[864,112],"id":"11a84006-a94d-441a-a8f2-ae592358aa5a","name":"Procesar apodos"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"d562c930-56ab-44f9-bf4d-1c71e1ed1ebc","leftValue":"={{ $json.tenant_id }}","rightValue":"","operator":{"type":"string","operation":"notEmpty","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-272,208],"id":"47e8f0d6-61b5-486e-94d1-a693811e8f73","name":"Token válido?"},{"parameters":{"assignments":{"assignments":[{"id":"886f6c86-2e1e-450b-b961-98eb2f466de2","name":"producto","value":"={{ $json['Nombre del producto'] }}","type":"string"},{"id":"712048cf-f4f5-45c7-b358-9b030180db26","name":"unidad","value":"={{ $json['Unidad de medida'][0] }}","type":"string"},{"id":"1776d2fc-ab6a-486f-b317-170f6de4023b","name":"factor","value":"={{ $json['Cuantas unidades vienen en la CAJA, PACA, BOLSA etc'] }}","type":"string"},{"id":"00631152-381e-44f4-85b6-f52e254c0793","name":"stock","value":"={{ $json['Stock actual'] }}","type":"string"},{"id":"774e25b6-5ec4-4c36-b410-1257e2c4e62f","name":"precio","value":"={{ $json['Precio Unitario'] }}","type":"string"},{"id":"2acdfa92-f908-4de1-a84b-e134aaf6f641","name":"apodos","value":"={{ $json['apodos (SEPARADOS POR COMAS)'] }}","type":"string"},{"id":"0af90c52-88a7-44ed-af0a-86889eaad70e","name":"token","value":"={{ $json.formQueryParameters.token }}","type":"string"},{"id":"661d6beb-2330-4533-82cb-cf15c42a7926","name":"costo","value":"={{ $json['Costo por unidad'] }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-768,208],"id":"26e5beca-0a06-47d3-bdb4-6ea72d04e53e","name":"datos_mapeados"},{"parameters":{"operation":"executeQuery","query":"INSERT INTO productos (\n  tenant_id,\n  producto,\n  precio_unitario,\n  costo,\n  factor_unidades,\n  apodos_input,\n  activo\n) VALUES (\n  '{{ $json.tenant_id }}',\n  '{{ $('datos_mapeados').item.json.producto }}',\n  {{ $('datos_mapeados').item.json.precio }},\n  {{ $('datos_mapeados').item.json.costo }},\n  {{ $('datos_mapeados').item.json.factor }},\n  '{{ $('datos_mapeados').item.json.apodos }}',\n  true\n)\nRETURNING producto_id, codigo, producto, precio_unitario, costo, factor_unidades;\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[240,112],"id":"496dc4f3-7a02-46fc-9361-b4a4ab9afb60","name":"Insertar Producto","credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}},{"parameters":{"assignments":{"assignments":[{"id":"30d34d04-10c9-4f47-9595-7dfc0dc26e2b","name":"apodos","value":"={{ $('datos_mapeados').item.json.apodos }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[656,112],"id":"667f4c26-1f6e-450f-aa02-efc2bb4740b9","name":"Edit Fields"},{"parameters":{"jsCode":"// Obtener el producto insertado\nconst productoInsertado = $('Insertar Producto').first().json;\n\n// Obtener unidad y stock de datos_mapeados\nconst unidad = $('datos_mapeados').first().json.unidad;\nconst factor = $('datos_mapeados').first().json.factor;\nconst stock = $('datos_mapeados').first().json.stock;\n\n// Obtener los apodos insertados (puede ser un array)\nconst apodosInsertados = $input.all();\n\n// Obtener datos del usuario\nconst nombreNegocio = $('Validar token').first().json.nombre_negocio;\nconst nombreUsuario = $('Validar token').first().json.nombre_usuario;\n\n// Formatear la lista de apodos con sus códigos\nlet listaApodos = \"\";\nif (apodosInsertados.length > 0) {\n  listaApodos = apodosInsertados.map(item => {\n    return `  • ${item.json.apodo} (${item.json.apodo_id})`;\n  }).join('\\n');\n} else {\n  listaApodos = \"  _Sin apodos_\";\n}\n\n// Construir el mensaje\nconst mensaje = `✅ *¡Producto creado exitosamente!*\n\n📦 *Producto:* ${productoInsertado.producto}\n🔢 *Código:* ${productoInsertado.codigo}\n📏 *Unidad:* ${unidad} (x${factor} unidades)\n💰 *Precio:* $${parseFloat(productoInsertado.precio_unitario).toLocaleString('es-CO')}\n💵 *Costo:* $${parseFloat(productoInsertado.costo || 0).toLocaleString('es-CO')}\n📊 *Stock inicial:* ${stock} unidades\n\n🏷️ *Apodos registrados:*\n${listaApodos}\n\n👤 *Creado por:* ${nombreUsuario}\n🏪 *Negocio:* ${nombreNegocio}\n\n_El producto ya está disponible para ventas._`;\n\nreturn {\n  mensaje: mensaje,\n  producto_id: productoInsertado.producto_id,\n  codigo: productoInsertado.codigo,\n  producto: productoInsertado.producto\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1360,112],"id":"4eb2a17f-d5c5-414d-8cd7-cde3abbf67bb","name":"Crear Mensaje de Confirmación"},{"parameters":{"operation":"executeQuery","query":"INSERT INTO productos_apodos (tenant_id, producto_id, apodo, producto)\nVALUES (\n  '{{ $('Validar token').item.json.tenant_id }}',\n  '{{ $json.producto_id }}',\n  '{{ $json.apodo }}',\n  '{{ $('Insertar Producto').item.json.producto }}'\n)\nRETURNING apodo_id, apodo, producto_id, producto;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1072,112],"id":"0b4abb7c-c15c-4eba-a0c5-cd6def926dfe","name":"Insertar apodos","credentials":{"postgres":{"id":"YBRduKQYniIuW5Mp","name":"Postgres account"}}}],"connections":{"Validar token":{"main":[[{"node":"Token válido?","type":"main","index":0}]]},"Webhook":{"main":[[{"node":"datos_mapeados","type":"main","index":0}]]},"Insertar inventario inicial":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Procesar apodos":{"main":[[{"node":"Insertar apodos","type":"main","index":0}]]},"Token válido?":{"main":[[{"node":"Insertar Producto","type":"main","index":0}],[{"node":"linkExpirado","type":"main","index":0}]]},"datos_mapeados":{"main":[[{"node":"Validar token","type":"main","index":0}]]},"Insertar Producto":{"main":[[{"node":"Insertar inventario inicial","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"Procesar apodos","type":"main","index":0}]]},"Crear Mensaje de Confirmación":{"main":[[{"node":"Enviar texto","type":"main","index":0}]]},"Insertar apodos":{"main":[[{"node":"Crear Mensaje de Confirmación","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","timezone":"America/Bogota","callerPolicy":"workflowsFromSameOwner","executionTimeout":15,"availableInMCP":false,"errorWorkflow":"6372jK3MqgOJM8iD"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Webhook":[{"json":{"Nombre del producto":"Coca cola 250ml","Unidad de medida":["CAJAS"],"Cuantas unidades vienen en la CAJA, PACA, BOLSA etc":30,"Stock actual":34,"apodos (SEPARADOS POR COMAS)":"coca cola 250, coca cola pequeña,","Precio Unitario":2000,"Costo por unidad":1200,"submittedAt":"2025-10-21T00:13:53.929-05:00","formMode":"production","formQueryParameters":{"token":"5846516b-2017-4fd6-b1e0-82fa58a73fc8"}}}]},"versionId":"14f162cb-07f9-4816-85a7-b2da5f1c12a5","triggerCount":1,"shared":[{"createdAt":"2025-10-06T05:13:20.460Z","updatedAt":"2025-10-06T05:13:20.460Z","role":"workflow:owner","workflowId":"ubS47RpCUfaTu9C9","projectId":"5qz94e5MiZbyOPrk"}],"tags":[{"createdAt":"2025-10-12T03:56:33.451Z","updatedAt":"2025-10-12T03:56:33.451Z","id":"1HiaED7XPSmwYswE","name":"ventas"}]}